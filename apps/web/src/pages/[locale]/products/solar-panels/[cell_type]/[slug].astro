---
import type { GetStaticPaths } from "astro";
import { getPayloadClient } from "@synoem/payload/client";
import ProductDetailLayout from "~/layouts/ProductDetailLayout.astro";
import { SolarPanelSpecs } from "~/components/astro";
import { defaultLocale, type Locale, locales } from "@synoem/config";

export const prerender = true;

export const getStaticPaths = (async () => {
  const payload = await getPayloadClient();
  const solarPanels = await payload.find({
    collection: "solar-panels",
    depth: 0,
    draft: false,
    where: {
      _status: {
        equals: "published",
      },
    },
    select: {
      slug: true,
      cell: {
        type: true,
      },
    },
  });

  const result = [];

  for (const locale of locales) {
    for (const solarPanel of solarPanels.docs) {
      result.push({
        params: {
          locale,
          cell_type: solarPanel.cell.type,
          slug: solarPanel.slug,
        },
        props: {
          id: solarPanel.id,
        },
      });
    }
  }
  return result;
}) satisfies GetStaticPaths;

const { id } = Astro.props;

const effectiveLocale = (Astro.currentLocale ?? defaultLocale) as Locale;

const payload = await getPayloadClient();
const solarPanelData = await payload.find({
  collection: "solar-panels",
  where: {
    id: {
      equals: id,
    },
  },
  limit: 1,
  locale: effectiveLocale,
});

if (solarPanelData.docs.length === 0) {
  return Astro.redirect("/404");
}

const solarPanel = solarPanelData.docs[0];
---

<ProductDetailLayout product={solarPanel}>
    <SolarPanelSpecs slot="specs" solarPanel={solarPanel} />
  <div id="downloads" slot="downloads">TODO</div>
</ProductDetailLayout>
