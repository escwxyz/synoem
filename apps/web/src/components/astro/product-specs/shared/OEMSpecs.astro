---
import type { PumpController, SolarPanel } from "@synoem/payload/payload-types";
import { getPackagingConfig } from "~/utils/get-packaging-config";
import config from "@synoem/payload/payload-config";
import { getPayload } from "payload";
import { useTranslations } from "~/i18n/utils";
import Table from "~/components/astro/table";

interface Props {
  leadTime: PumpController["leadTime"] | SolarPanel["leadTime"];
  moq: PumpController["moq"] | SolarPanel["moq"];
  packagingConfig:
    | PumpController["packagingConfig"]
    | SolarPanel["packagingConfig"];
}

const {
  leadTime = [],
  moq,
  packagingConfig: packagingConfigData,
} = Astro.props;

const payload = await getPayload({ config });

const packagingConfig = await getPackagingConfig({
  packagingConfig: packagingConfigData,
  payload,
});

const hasUnitWeight =
  packagingConfig.unitWeight &&
  packagingConfig.unitWeight.value &&
  packagingConfig.unitWeight.unit;

const hasUnitDimensions =
  packagingConfig.unitDimensions &&
  packagingConfig.unitDimensions.h &&
  packagingConfig.unitDimensions.w &&
  packagingConfig.unitDimensions.d &&
  packagingConfig.unitDimensions.unit;

const hasPalletDimensions =
  packagingConfig.palletDimensions &&
  packagingConfig.palletDimensions.h &&
  packagingConfig.palletDimensions.w &&
  packagingConfig.palletDimensions.d &&
  packagingConfig.palletDimensions.unit;

const hasPalletWeight =
  packagingConfig.palletWeight &&
  packagingConfig.palletWeight.value &&
  packagingConfig.palletWeight.unit;

const { t } = useTranslations();
---

<div class="space-y-6 overflow-hidden">
  {
    leadTime && leadTime.length > 0 && (
      <div class="mb-6">
        <h4 class="text-base font-medium mb-3 border-l-4 border-primary pl-2">
          Lead Time
        </h4>
        <div class="overflow-x-auto">
          <Table.Root class="w-full min-w-[300px]">
            <Table.Body>
              <Table.Row>
                <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                  Quantity Range
                </Table.Cell>
                <Table.Cell class="py-2 font-medium text-sm">
                  Lead Time
                </Table.Cell>
              </Table.Row>
              {leadTime.map((item) => (
                <Table.Row>
                  <Table.Cell class="py-2 text-sm">
                    {item.range?.min?.value ? `${item.range.min.value}` : "0"}
                    {item.range?.min?.unit && item.range.min.unit}
                    {item.range?.max?.value
                      ? ` - ${item.range.max.value}`
                      : "+"}
                    {item.range?.max?.unit && item.range.max.unit}
                  </Table.Cell>
                  <Table.Cell class="py-2 text-sm">
                    {item.range?.duration?.value} {item.range?.duration?.unit}
                  </Table.Cell>
                </Table.Row>
              ))}
            </Table.Body>
          </Table.Root>
        </div>
      </div>
    )
  }
  {
    moq && (
      <div class="mb-6">
        <h4 class="text-base font-medium mb-3 border-l-4 border-primary pl-2">
          {t("OEM.moq")}
        </h4>
        <div class="overflow-x-auto">
          <Table.Root class="w-full min-w-[300px]">
            <Table.Body>
              <Table.Row>
                <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                  MOQ
                </Table.Cell>
                <Table.Cell class="py-2 text-sm">
                  {moq?.value} {moq?.unit}
                </Table.Cell>
              </Table.Row>
              <Table.Row />
            </Table.Body>
          </Table.Root>
        </div>
      </div>
    )
  }
  <div class="mb-6">
    <h4 class="text-base font-medium mb-3 border-l-4 border-primary pl-2">
      Packaging Details
    </h4>
    <div class="mb-6">
      <h5 class="text-sm font-medium mb-2">Unit Packaging</h5>
      <div class="overflow-x-auto">
        <Table.Root class="w-full min-w-[300px]">
          <Table.Body>
            {
              packagingConfig.unitQty && (
                <Table.Row>
                  <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                    Packaging Unit
                  </Table.Cell>
                  <Table.Cell class="py-2 text-sm">
                    {packagingConfig.unitQty.value}{" "}
                    {packagingConfig.unitQty.unit}
                  </Table.Cell>
                </Table.Row>
              )
            }
            {
              hasUnitDimensions && (
                <Table.Row>
                  <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                    Packaging Unit Dimensions
                  </Table.Cell>
                  <Table.Cell class="py-2 text-sm">
                    {packagingConfig.unitDimensions!.h} ×{" "}
                    {packagingConfig.unitDimensions!.w} ×{" "}
                    {packagingConfig.unitDimensions!.d}{" "}
                    {packagingConfig.unitDimensions!.unit}
                  </Table.Cell>
                </Table.Row>
              )
            }
            {
              hasUnitWeight && (
                <Table.Row>
                  <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                    Unit Weight
                  </Table.Cell>
                  <Table.Cell class="py-2 text-sm">
                    {packagingConfig.unitWeight!.value}{" "}
                    {packagingConfig.unitWeight!.unit}
                  </Table.Cell>
                </Table.Row>
              )
            }
            {!hasUnitWeight && !hasUnitDimensions && <Table.Row />}
          </Table.Body>
        </Table.Root>
      </div>
    </div>

    {
      packagingConfig.qtyPerPallet && (
        <div class="mb-6">
          <h5 class="text-sm font-medium mb-2">Pallet Config</h5>
          <div class="overflow-x-auto">
            <Table.Root class="w-full min-w-[300px]">
              <Table.Body>
                <Table.Row>
                  <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                    Qty per Pallet
                  </Table.Cell>
                  <Table.Cell class="py-2 text-sm">
                    {packagingConfig.qtyPerPallet}
                  </Table.Cell>
                </Table.Row>

                {hasPalletDimensions && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Pallet Dimensions
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.palletDimensions!.h} ×{" "}
                      {packagingConfig.palletDimensions!.w} ×{" "}
                      {packagingConfig.palletDimensions!.d}{" "}
                      {packagingConfig.palletDimensions!.unit}
                    </Table.Cell>
                  </Table.Row>
                )}
                {hasPalletWeight && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Pallet Weight
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.palletWeight!.value}{" "}
                      {packagingConfig.palletWeight!.unit}
                    </Table.Cell>
                  </Table.Row>
                )}
                {!hasPalletWeight && !hasPalletDimensions && <Table.Row />}
              </Table.Body>
            </Table.Root>
          </div>
        </div>
      )
    }

    {
      (packagingConfig.containerType ||
        packagingConfig.pltsPerContainer ||
        packagingConfig.totalQty) && (
        <div class="mb-6">
          <h5 class="text-sm font-medium mb-2">Container Config</h5>
          <div class="overflow-x-auto">
            <Table.Root class="w-full min-w-[300px]">
              <Table.Body>
                {packagingConfig.containerType && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Container Type
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.containerType}
                    </Table.Cell>
                  </Table.Row>
                )}
                {packagingConfig.pltsPerContainer && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Pallets per Container
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.pltsPerContainer}
                    </Table.Cell>
                  </Table.Row>
                )}
                {packagingConfig.totalQty && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Total Qty per Container
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.totalQty}
                    </Table.Cell>
                  </Table.Row>
                )}
                {packagingConfig.totalWeight && (
                  <Table.Row>
                    <Table.Cell class="py-2 font-medium text-sm w-1/3 md:w-1/2">
                      Total Weight
                    </Table.Cell>
                    <Table.Cell class="py-2 text-sm">
                      {packagingConfig.totalWeight} kg
                    </Table.Cell>
                  </Table.Row>
                )}
              </Table.Body>
            </Table.Root>
          </div>
        </div>
      )
    }
  </div>
</div>
