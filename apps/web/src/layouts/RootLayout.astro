---
import "@synoem/ui/web.css";

import { defaultLocale, type Locale } from "@synoem/config";
import { getLocaleFromUrl, useTranslations } from "~/i18n/utils";
import { JotaiProvider, CookieConsent } from "~/components/react";
import FooterLayout from "./FooterLayout.astro";
import HeaderLayout from "./HeaderLayout.astro";
import Head from "./Head.astro";
import { type Props as SEOProps } from "astro-seo";

const locale = getLocaleFromUrl(Astro.url);

type Props = SEOProps;

const props: Props = Astro.props;
---

<!doctype html>
<html lang={locale} class="overflow-x-hidden max-w-full min-h-screen">
  <Head {...props} />
  <body class="flex min-h-screen flex-col">
    <HeaderLayout />
    <JotaiProvider client:load>
      <main class="w-full max-w-none flex-1 mx-auto p-8 md:p-16 lg:px-16">
        <slot />
      </main>
    </JotaiProvider>
    <CookieConsent client:only="react" />
    <FooterLayout />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
<script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "theme-light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (document === window.document && typeof localStorage !== "undefined") {
      // 清除之前的观察者
      if (window._themeObserver) {
        window._themeObserver.disconnect();
      }

      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "theme-light");
      });

      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });

      window._themeObserver = observer;
    }
  }

  if (!window._themeObserver) {
    setDarkMode(document);
  }

  document.addEventListener("astro:before-swap", (ev) => {
    setDarkMode(ev.newDocument);
  });
</script>
