/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    pages: Page;
    industries: Industry;
    notifications: Notification;
    inquiries: Inquiry;
    'newsletter-subscribers': NewsletterSubscriber;
    images: Image;
    videos: Video;
    models: Model;
    documents: Document;
    attachments: Attachment;
    'solar-panels': SolarPanel;
    'pump-controllers': PumpController;
    warranties: Warranty;
    instructions: Instruction;
    certifications: Certification;
    'packaging-configs': PackagingConfig;
    datasheets: Datasheet;
    drawings: Drawing;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    'solar-panels': {
      relatedInquires: 'inquiries';
    };
    'pump-controllers': {
      relatedInquires: 'inquiries';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    industries: IndustriesSelect<false> | IndustriesSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    inquiries: InquiriesSelect<false> | InquiriesSelect<true>;
    'newsletter-subscribers': NewsletterSubscribersSelect<false> | NewsletterSubscribersSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    models: ModelsSelect<false> | ModelsSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    attachments: AttachmentsSelect<false> | AttachmentsSelect<true>;
    'solar-panels': SolarPanelsSelect<false> | SolarPanelsSelect<true>;
    'pump-controllers': PumpControllersSelect<false> | PumpControllersSelect<true>;
    warranties: WarrantiesSelect<false> | WarrantiesSelect<true>;
    instructions: InstructionsSelect<false> | InstructionsSelect<true>;
    certifications: CertificationsSelect<false> | CertificationsSelect<true>;
    'packaging-configs': PackagingConfigsSelect<false> | PackagingConfigsSelect<true>;
    datasheets: DatasheetsSelect<false> | DatasheetsSelect<true>;
    drawings: DrawingsSelect<false> | DrawingsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    footer: Footer;
    header: Header;
    'company-info': CompanyInfo;
    'contact-info': ContactInfo;
  };
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    'company-info': CompanyInfoSelect<false> | CompanyInfoSelect<true>;
    'contact-info': ContactInfoSelect<false> | ContactInfoSelect<true>;
  };
  locale: 'en' | 'de';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles: ('admin' | 'editor' | 'customer')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (HeroBlockType | ContentBlockType | CallToActionBlockType | MediaBlockType | FeatureBlockType)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Image;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug: string;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlockType".
 */
export interface HeroBlockType {
  /**
   * A short, optional heading above the main title.
   */
  eyebrow?: string | null;
  /**
   * Main heading for the block.
   */
  title: string;
  /**
   * Secondary heading under the main title.
   */
  subtitle?: string | null;
  /**
   * Longer body text or paragraph content.
   */
  desc?: string | null;
  ctaPrimary?: {
    type?: ('internal' | 'external') | null;
    internal?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: number | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: number | PumpController;
        } | null)
      | ({
          relationTo: 'industries';
          value: number | Industry;
        } | null);
    /**
     * External URL will be opened in a new tab.
     */
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  ctaSecondary?: {
    type?: ('internal' | 'external') | null;
    internal?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: number | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: number | PumpController;
        } | null)
      | ({
          relationTo: 'industries';
          value: number | Industry;
        } | null);
    /**
     * External URL will be opened in a new tab.
     */
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  /**
   * Select an image, video, or model to display in the hero section.
   */
  media:
    | {
        relationTo: 'images';
        value: number | Image;
      }
    | {
        relationTo: 'videos';
        value: number | Video;
      }
    | {
        relationTo: 'models';
        value: number | Model;
      };
  posX?: number | null;
  posY?: number | null;
  posZ?: number | null;
  rotX?: number | null;
  rotY?: number | null;
  rotZ?: number | null;
  scale?: number | null;
  animations?:
    | {
        type: 'position' | 'rotation' | 'scale';
        trigger: 'scroll' | 'view' | 'time';
        easing?: ('linear' | 'easeIn' | 'easeOut' | 'easeInOut' | 'spring') | null;
        /**
         * Duration in seconds
         */
        duration?: number | null;
        /**
         * Delay in seconds
         */
        delay?: number | null;
        posValues?: {
          from?: {
            x?: number | null;
            y?: number | null;
            z?: number | null;
          };
          to?: {
            x?: number | null;
            y?: number | null;
            z?: number | null;
          };
        };
        rotValues?: {
          from?: {
            x?: number | null;
            y?: number | null;
            z?: number | null;
          };
          to?: {
            x?: number | null;
            y?: number | null;
            z?: number | null;
          };
        };
        scaleValues?: {
          from?: number | null;
          to?: number | null;
        };
        scrollSettings?: {
          start?: string | null;
          end?: string | null;
          scrub?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Select if text is on the left or the right.
   */
  textPlacement?: ('left' | 'right') | null;
  /**
   * Align text within its column (left, center, or right).
   */
  textAlignment?: ('start' | 'center' | 'end') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroBlock';
}
/**
 * Manage your solar panel products
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panels".
 */
export interface SolarPanel {
  id: number;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  /**
   * The cover image for the product
   */
  cover: number | Image;
  datasheet?: (number | null) | Datasheet;
  /**
   * Related inquiries
   */
  relatedInquires?: {
    docs?: (number | Inquiry)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * The model name or number of the product.
   */
  modelName: string;
  desc: string;
  /**
   * Select the industry that this product belongs to.
   */
  industry: number | Industry;
  /**
   * Upload images for the product
   */
  gallery?: (number | Image)[] | null;
  enableVariants?: boolean | null;
  vars?: SolarPanelVariantBlockType[] | null;
  three?: {
    enabled?: boolean | null;
    /**
     * Upload a 3D model file
     */
    model?: (number | null) | Model;
    variants?:
      | {
          name: string;
          color: {
            /**
             * Hex color code or material name
             */
            frame: string;
            /**
             * Hex color code or material name
             */
            glass: string;
            /**
             * Hex color code or material name
             */
            backsheet: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Add features to the product
   */
  features?: ProductFeatureBlockType[] | null;
  dimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  weight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  drawing?: (number | null) | Drawing;
  cell: {
    type: 'perc' | 'hjt' | 'topcon';
    tech?: ('0bb' | 'smbb' | 'mbb' | 'bc' | 'perovskite')[] | null;
    size: {
      length: number;
      width: number;
    };
    count: number;
  };
  facial: 'monofacial' | 'bifacial';
  /**
   * Enter the bifaciality of the panel
   */
  bifaciality?: number | null;
  glass: {
    type: 'single' | 'double';
    thickness: number;
    desc: string;
  };
  /**
   * Enter the description of the frame
   */
  frame: string;
  /**
   * Enter the description of the junction box
   */
  junction: string;
  /**
   * Enter the description of the connector
   */
  connector: string;
  /**
   * Enter the workingtemperature range of the panel / cell
   */
  temp: {
    min: number;
    max: number;
  };
  /**
   * Enter the description of the hail
   */
  hail?: string | null;
  loads: {
    wind: number;
    snow: number;
  };
  powerRange: {
    min: number;
    max: number;
    /**
     * Step must be a multiple of 5
     */
    step: number;
    /**
     * Click the button to generate the power points
     */
    points?:
      | {
          /**
           * This is automatically generated
           */
          pmax?: number | null;
          /**
           * This is automatically generated
           */
          efficiency?: number | null;
          vmp: number;
          imp: number;
          voc: number;
          isc: number;
          id?: string | null;
        }[]
      | null;
  };
  tempCo: {
    pmax: number;
    isc: number;
    voc: number;
    noct: number;
  };
  maxRatings: {
    fuse: number;
    /**
     * Enter the maximum system voltage
     */
    voltage: string;
    /**
     * Enter the fire rating
     */
    fire: string;
  };
  moq?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Specify lead times for different quantity ranges
   */
  leadTime?:
    | {
        range?: {
          /**
           * Lower bound of the range. Leave empty for no lower limit.
           */
          min?: {
            value?: number | null;
            unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
          };
          /**
           * Upper bound of the range. Leave empty for no upper limit.
           */
          max?: {
            value?: number | null;
            unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
          };
          duration?: {
            value?: number | null;
            unit?: ('days' | 'weeks' | 'months' | 'years') | null;
          };
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Select the packaging configuration for the product
   */
  packagingConfig: number | PackagingConfig;
  /**
   * Select the warranties for the product
   */
  warranties?: (number | Warranty)[] | null;
  /**
   * Select the instructions for the product
   */
  instructions?: (number | Instruction)[] | null;
  /**
   * Select the certifications for the product
   */
  certifications?: (number | Certification)[] | null;
  /**
   * Select related products (max 10)
   */
  relatedProducts?: (number | SolarPanel)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasheets".
 */
export interface Datasheet {
  id: number;
  title: string;
  desc?: string | null;
  /**
   * Upload a PDF file for the datasheet
   */
  file?: (number | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: number;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries".
 */
export interface Inquiry {
  id: number;
  formType: 'simple' | 'product' | 'full';
  /**
   * Product inquiry related product
   */
  relatedProduct?:
    | ({
        relationTo: 'solar-panels';
        value: number | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: number | PumpController;
      } | null);
  /**
   * Inquiry status
   */
  status?: ('new' | 'replied' | 'following' | 'converted' | 'closed') | null;
  /**
   * Only for internal use, not displayed to customers
   */
  internalNotes?: string | null;
  /**
   * Date and time of the scheduled action
   */
  scheduledDate?: string | null;
  /**
   * Customer basic information
   */
  basicInfo: {
    name: string;
    email: string;
    phone: string;
    requirements: string;
  };
  companyInfo?: {
    company?: string | null;
    position?: string | null;
    type?: ('wholesaler' | 'retailer' | 'manufacturer' | 'project-developer' | 'other') | null;
    country?:
      | (
          | 'AF'
          | 'AX'
          | 'AL'
          | 'DZ'
          | 'AS'
          | 'AD'
          | 'AO'
          | 'AI'
          | 'AQ'
          | 'AG'
          | 'AR'
          | 'AM'
          | 'AW'
          | 'AU'
          | 'AT'
          | 'AZ'
          | 'BS'
          | 'BH'
          | 'BD'
          | 'BB'
          | 'BY'
          | 'BE'
          | 'BZ'
          | 'BJ'
          | 'BM'
          | 'BT'
          | 'BO'
          | 'BA'
          | 'BW'
          | 'BV'
          | 'BR'
          | 'IO'
          | 'BN'
          | 'BG'
          | 'BF'
          | 'BI'
          | 'KH'
          | 'CM'
          | 'CA'
          | 'CV'
          | 'KY'
          | 'CF'
          | 'TD'
          | 'CL'
          | 'CN'
          | 'CX'
          | 'CC'
          | 'CO'
          | 'KM'
          | 'CG'
          | 'CD'
          | 'CK'
          | 'CR'
          | 'CI'
          | 'HR'
          | 'CU'
          | 'CY'
          | 'CZ'
          | 'DK'
          | 'DJ'
          | 'DM'
          | 'DO'
          | 'EC'
          | 'EG'
          | 'SV'
          | 'GQ'
          | 'ER'
          | 'EE'
          | 'ET'
          | 'FK'
          | 'FO'
          | 'FJ'
          | 'FI'
          | 'FR'
          | 'GF'
          | 'PF'
          | 'TF'
          | 'GA'
          | 'GM'
          | 'GE'
          | 'DE'
          | 'GH'
          | 'GI'
          | 'GR'
          | 'GL'
          | 'GD'
          | 'GP'
          | 'GU'
          | 'GT'
          | 'GG'
          | 'GN'
          | 'GW'
          | 'GY'
          | 'HT'
          | 'HM'
          | 'VA'
          | 'HN'
          | 'HK'
          | 'HU'
          | 'IS'
          | 'IN'
          | 'ID'
          | 'IR'
          | 'IQ'
          | 'IE'
          | 'IM'
          | 'IL'
          | 'IT'
          | 'JM'
          | 'JP'
          | 'JE'
          | 'JO'
          | 'KZ'
          | 'KE'
          | 'KI'
          | 'KP'
          | 'KR'
          | 'XK'
          | 'KW'
          | 'KG'
          | 'LA'
          | 'LV'
          | 'LB'
          | 'LS'
          | 'LR'
          | 'LY'
          | 'LI'
          | 'LT'
          | 'LU'
          | 'MO'
          | 'MK'
          | 'MG'
          | 'MW'
          | 'MY'
          | 'MV'
          | 'ML'
          | 'MT'
          | 'MH'
          | 'MQ'
          | 'MR'
          | 'MU'
          | 'YT'
          | 'MX'
          | 'FM'
          | 'MD'
          | 'MC'
          | 'MN'
          | 'ME'
          | 'MS'
          | 'MA'
          | 'MZ'
          | 'MM'
          | 'NA'
          | 'NR'
          | 'NP'
          | 'NL'
          | 'AN'
          | 'NC'
          | 'NZ'
          | 'NI'
          | 'NE'
          | 'NG'
          | 'NU'
          | 'NF'
          | 'MP'
          | 'NO'
          | 'OM'
          | 'PK'
          | 'PW'
          | 'PS'
          | 'PA'
          | 'PG'
          | 'PY'
          | 'PE'
          | 'PH'
          | 'PN'
          | 'PL'
          | 'PT'
          | 'PR'
          | 'QA'
          | 'RE'
          | 'RO'
          | 'RU'
          | 'RW'
          | 'SH'
          | 'KN'
          | 'LC'
          | 'PM'
          | 'VC'
          | 'WS'
          | 'SM'
          | 'ST'
          | 'SA'
          | 'SN'
          | 'RS'
          | 'SC'
          | 'SL'
          | 'SG'
          | 'SK'
          | 'SI'
          | 'SB'
          | 'SO'
          | 'ZA'
          | 'GS'
          | 'ES'
          | 'LK'
          | 'SD'
          | 'SR'
          | 'SJ'
          | 'SZ'
          | 'SE'
          | 'CH'
          | 'SY'
          | 'TW'
          | 'TJ'
          | 'TZ'
          | 'TH'
          | 'TL'
          | 'TG'
          | 'TK'
          | 'TO'
          | 'TT'
          | 'TN'
          | 'TR'
          | 'TM'
          | 'TC'
          | 'TV'
          | 'UG'
          | 'UA'
          | 'AE'
          | 'GB'
          | 'US'
          | 'UM'
          | 'UY'
          | 'UZ'
          | 'VU'
          | 'VE'
          | 'VN'
          | 'VG'
          | 'VI'
          | 'WF'
          | 'EH'
          | 'YE'
          | 'ZM'
          | 'ZW'
        )
      | null;
    website?: string | null;
    employees?: ('1-10' | '11-50' | '51-200' | '201-500' | '501-1000' | '1000+') | null;
  };
  productInfo?: {
    productCategory?: ('solar-panel' | 'pump-controller') | null;
    productName?: string | null;
    qty?: {
      value?: number | null;
      unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
    };
    frequency?: ('one-time' | 'monthly' | 'quarterly' | 'yearly') | null;
    destination?:
      | (
          | 'AF'
          | 'AX'
          | 'AL'
          | 'DZ'
          | 'AS'
          | 'AD'
          | 'AO'
          | 'AI'
          | 'AQ'
          | 'AG'
          | 'AR'
          | 'AM'
          | 'AW'
          | 'AU'
          | 'AT'
          | 'AZ'
          | 'BS'
          | 'BH'
          | 'BD'
          | 'BB'
          | 'BY'
          | 'BE'
          | 'BZ'
          | 'BJ'
          | 'BM'
          | 'BT'
          | 'BO'
          | 'BA'
          | 'BW'
          | 'BV'
          | 'BR'
          | 'IO'
          | 'BN'
          | 'BG'
          | 'BF'
          | 'BI'
          | 'KH'
          | 'CM'
          | 'CA'
          | 'CV'
          | 'KY'
          | 'CF'
          | 'TD'
          | 'CL'
          | 'CN'
          | 'CX'
          | 'CC'
          | 'CO'
          | 'KM'
          | 'CG'
          | 'CD'
          | 'CK'
          | 'CR'
          | 'CI'
          | 'HR'
          | 'CU'
          | 'CY'
          | 'CZ'
          | 'DK'
          | 'DJ'
          | 'DM'
          | 'DO'
          | 'EC'
          | 'EG'
          | 'SV'
          | 'GQ'
          | 'ER'
          | 'EE'
          | 'ET'
          | 'FK'
          | 'FO'
          | 'FJ'
          | 'FI'
          | 'FR'
          | 'GF'
          | 'PF'
          | 'TF'
          | 'GA'
          | 'GM'
          | 'GE'
          | 'DE'
          | 'GH'
          | 'GI'
          | 'GR'
          | 'GL'
          | 'GD'
          | 'GP'
          | 'GU'
          | 'GT'
          | 'GG'
          | 'GN'
          | 'GW'
          | 'GY'
          | 'HT'
          | 'HM'
          | 'VA'
          | 'HN'
          | 'HK'
          | 'HU'
          | 'IS'
          | 'IN'
          | 'ID'
          | 'IR'
          | 'IQ'
          | 'IE'
          | 'IM'
          | 'IL'
          | 'IT'
          | 'JM'
          | 'JP'
          | 'JE'
          | 'JO'
          | 'KZ'
          | 'KE'
          | 'KI'
          | 'KP'
          | 'KR'
          | 'XK'
          | 'KW'
          | 'KG'
          | 'LA'
          | 'LV'
          | 'LB'
          | 'LS'
          | 'LR'
          | 'LY'
          | 'LI'
          | 'LT'
          | 'LU'
          | 'MO'
          | 'MK'
          | 'MG'
          | 'MW'
          | 'MY'
          | 'MV'
          | 'ML'
          | 'MT'
          | 'MH'
          | 'MQ'
          | 'MR'
          | 'MU'
          | 'YT'
          | 'MX'
          | 'FM'
          | 'MD'
          | 'MC'
          | 'MN'
          | 'ME'
          | 'MS'
          | 'MA'
          | 'MZ'
          | 'MM'
          | 'NA'
          | 'NR'
          | 'NP'
          | 'NL'
          | 'AN'
          | 'NC'
          | 'NZ'
          | 'NI'
          | 'NE'
          | 'NG'
          | 'NU'
          | 'NF'
          | 'MP'
          | 'NO'
          | 'OM'
          | 'PK'
          | 'PW'
          | 'PS'
          | 'PA'
          | 'PG'
          | 'PY'
          | 'PE'
          | 'PH'
          | 'PN'
          | 'PL'
          | 'PT'
          | 'PR'
          | 'QA'
          | 'RE'
          | 'RO'
          | 'RU'
          | 'RW'
          | 'SH'
          | 'KN'
          | 'LC'
          | 'PM'
          | 'VC'
          | 'WS'
          | 'SM'
          | 'ST'
          | 'SA'
          | 'SN'
          | 'RS'
          | 'SC'
          | 'SL'
          | 'SG'
          | 'SK'
          | 'SI'
          | 'SB'
          | 'SO'
          | 'ZA'
          | 'GS'
          | 'ES'
          | 'LK'
          | 'SD'
          | 'SR'
          | 'SJ'
          | 'SZ'
          | 'SE'
          | 'CH'
          | 'SY'
          | 'TW'
          | 'TJ'
          | 'TZ'
          | 'TH'
          | 'TL'
          | 'TG'
          | 'TK'
          | 'TO'
          | 'TT'
          | 'TN'
          | 'TR'
          | 'TM'
          | 'TC'
          | 'TV'
          | 'UG'
          | 'UA'
          | 'AE'
          | 'GB'
          | 'US'
          | 'UM'
          | 'UY'
          | 'UZ'
          | 'VU'
          | 'VE'
          | 'VN'
          | 'VG'
          | 'VI'
          | 'WF'
          | 'EH'
          | 'YE'
          | 'ZM'
          | 'ZW'
        )
      | null;
    timeline?: ('immediate' | '1-month' | '3-months' | '6-months' | '1-year') | null;
  };
  contactPreferences?: {
    contactEmail?: boolean | null;
    contactPhone?: boolean | null;
    contactWhatsapp?: boolean | null;
  };
  /**
   * Maximum 3 files
   */
  attachments?:
    | {
        file?: (number | null) | Attachment;
        id?: string | null;
      }[]
    | null;
  metadata?: {
    source?: ('website' | 'exhibition' | 'referral' | 'social-media' | 'email' | 'phone' | 'other') | null;
    page?: string | null;
    ipAddress?: string | null;
    userAgent?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage your pump controller products
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controllers".
 */
export interface PumpController {
  id: number;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  /**
   * The cover image for the product
   */
  cover: number | Image;
  datasheet?: (number | null) | Datasheet;
  /**
   * Related inquiries
   */
  relatedInquires?: {
    docs?: (number | Inquiry)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * The model name or number of the product.
   */
  modelName: string;
  desc: string;
  /**
   * Select the industry that this product belongs to.
   */
  industry: number | Industry;
  /**
   * Upload images for the product
   */
  gallery?: (number | Image)[] | null;
  enableVariants?: boolean | null;
  vars?: PumpControllerVariantBlockType[] | null;
  three?: {
    enabled?: boolean | null;
    /**
     * Upload a 3D model file
     */
    model?: (number | null) | Model;
    variants?:
      | {
          name: string;
          color: {
            /**
             * Hex color code or material name
             */
            frame: string;
            /**
             * Hex color code or material name
             */
            glass: string;
            /**
             * Hex color code or material name
             */
            backsheet: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Add features to the product
   */
  features?: ProductFeatureBlockType[] | null;
  type: 'smart' | 'standard';
  maxVoltage: number;
  maxCurrent: number;
  maxPower: number;
  startingPressure: number;
  maxPressure: number;
  tempRange: {
    min: number;
    max: number;
  };
  moq?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Specify lead times for different quantity ranges
   */
  leadTime?:
    | {
        range?: {
          /**
           * Lower bound of the range. Leave empty for no lower limit.
           */
          min?: {
            value?: number | null;
            unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
          };
          /**
           * Upper bound of the range. Leave empty for no upper limit.
           */
          max?: {
            value?: number | null;
            unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
          };
          duration?: {
            value?: number | null;
            unit?: ('days' | 'weeks' | 'months' | 'years') | null;
          };
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Select the packaging configuration for the product
   */
  packagingConfig: number | PackagingConfig;
  /**
   * Select the warranties for the product
   */
  warranties?: (number | Warranty)[] | null;
  /**
   * Select the instructions for the product
   */
  instructions?: (number | Instruction)[] | null;
  /**
   * Select the certifications for the product
   */
  certifications?: (number | Certification)[] | null;
  /**
   * Select related products (max 10)
   */
  relatedProducts?: (number | PumpController)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries".
 */
export interface Industry {
  id: number;
  title: string;
  desc: string;
  /**
   * The cover image for the product
   */
  cover: number | Image;
  slug: string;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PumpControllerVariantBlockType".
 */
export interface PumpControllerVariantBlockType {
  /**
   * The SKU for the product
   */
  sku: string;
  color: 'purple' | 'blue' | 'green' | 'yellow' | 'orange';
  /**
   * Upload images for the product
   */
  gallery?: (number | Image)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pcv';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models".
 */
export interface Model {
  id: number;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFeatureBlockType".
 */
export interface ProductFeatureBlockType {
  title: string;
  description: string;
  iconName?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productFeatureBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "packaging-configs".
 */
export interface PackagingConfig {
  id: number;
  title: string;
  /**
   * Description of the packaging configuration
   */
  description?: string | null;
  /**
   * How the product is packaged individually (e.g., pieces, sets)
   */
  unitQty?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Dimensions of a single package
   */
  unitDimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  /**
   * Weight of a single packaged unit
   */
  unitWeight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  /**
   * Number of pieces that can fit on one pallet
   */
  qtyPerPallet?: number | null;
  /**
   * Dimensions of a fully loaded pallet
   */
  palletDimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  /**
   * Total weight of a fully loaded pallet (including pallet weight)
   */
  palletWeight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  /**
   * Standard shipping container type
   */
  containerType?: ('20GP' | '40GP' | '40HQ') | null;
  /**
   * Number of pallets that can fit in the container
   */
  pltsPerContainer?: number | null;
  /**
   * Total number of pieces in the container (Pallets × Units per Pallet)
   */
  totalQty?: number | null;
  /**
   * Total weight of all pallets in the container (kg)
   */
  totalWeight?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warranties".
 */
export interface Warranty {
  id: number;
  title: string;
  type?: ('product' | 'power') | null;
  /**
   * Description of the warranty
   */
  desc?: string | null;
  /**
   * Duration of the warranty
   */
  duration?: {
    value?: number | null;
    unit?: ('days' | 'weeks' | 'months' | 'years') | null;
  };
  /**
   * File of the warranty
   */
  file?: (number | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructions".
 */
export interface Instruction {
  id: number;
  title: string;
  description?: string | null;
  /**
   * Upload a PDF file for the instructions
   */
  file?: (number | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications".
 */
export interface Certification {
  id: number;
  name: string;
  desc?: string | null;
  file?: (number | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * Customer uploaded files
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments".
 */
export interface Attachment {
  id: number;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolarPanelVariantBlockType".
 */
export interface SolarPanelVariantBlockType {
  /**
   * The SKU for the product
   */
  sku: string;
  frame: 'black' | 'silver';
  panel: 'all-black' | 'transparent' | 'full-black';
  /**
   * Upload images for the product
   */
  gallery?: (number | Image)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'spv';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drawings".
 */
export interface Drawing {
  id: number;
  title: string;
  description?: string | null;
  file: number | Image;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: number;
  duration?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockType".
 */
export interface ContentBlockType {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('internal' | 'external') | null;
          internal?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'solar-panels';
                value: number | SolarPanel;
              } | null)
            | ({
                relationTo: 'pump-controllers';
                value: number | PumpController;
              } | null)
            | ({
                relationTo: 'industries';
                value: number | Industry;
              } | null);
          /**
           * External URL will be opened in a new tab.
           */
          url?: string | null;
          label?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlockType".
 */
export interface CallToActionBlockType {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link?: {
          type?: ('internal' | 'external') | null;
          internal?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'solar-panels';
                value: number | SolarPanel;
              } | null)
            | ({
                relationTo: 'pump-controllers';
                value: number | PumpController;
              } | null)
            | ({
                relationTo: 'industries';
                value: number | Industry;
              } | null);
          /**
           * External URL will be opened in a new tab.
           */
          url?: string | null;
          label?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'callToActionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockType".
 */
export interface MediaBlockType {
  /**
   * Select a media item to display
   */
  media:
    | {
        relationTo: 'images';
        value: number | Image;
      }
    | {
        relationTo: 'videos';
        value: number | Video;
      }
    | {
        relationTo: 'models';
        value: number | Model;
      };
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlockType".
 */
export interface FeatureBlockType {
  /**
   * A short, optional heading above the main title.
   */
  eyebrow?: string | null;
  title: string;
  /**
   * Secondary heading under the main title.
   */
  subtitle?: string | null;
  desc?: string | null;
  ctaPrimary?: {
    type?: ('internal' | 'external') | null;
    internal?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: number | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: number | PumpController;
        } | null)
      | ({
          relationTo: 'industries';
          value: number | Industry;
        } | null);
    /**
     * External URL will be opened in a new tab.
     */
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  ctaSecondary?: {
    type?: ('internal' | 'external') | null;
    internal?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: number | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: number | PumpController;
        } | null)
      | ({
          relationTo: 'industries';
          value: number | Industry;
        } | null);
    /**
     * External URL will be opened in a new tab.
     */
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  features: {
    image?: (number | null) | Image;
    title: string;
    desc?: string | null;
    id?: string | null;
  }[];
  /**
   * Select if text is on the top or the bottom.
   */
  textPlacement?: ('top' | 'bottom') | null;
  /**
   * Align text within its column (left, center, or right).
   */
  textAlignment?: ('start' | 'center' | 'end') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: number;
  title: string;
  link?: {
    relationTo: 'pages';
    value: number | Page;
  } | null;
  state?: ('active' | 'inactive') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Users who have subscribed to the newsletter
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers".
 */
export interface NewsletterSubscriber {
  id: number;
  /**
   * The subscriber's email address
   */
  email: string;
  /**
   * The subscriber's name (optional)
   */
  name?: string | null;
  /**
   * Subscription status
   */
  status?: ('subscribed' | 'unsubscribed') | null;
  metadata?: {
    /**
     * The page the subscriber subscribed from
     */
    page?: string | null;
    ipAddress?: string | null;
    userAgent?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'industries';
        value: number | Industry;
      } | null)
    | ({
        relationTo: 'notifications';
        value: number | Notification;
      } | null)
    | ({
        relationTo: 'inquiries';
        value: number | Inquiry;
      } | null)
    | ({
        relationTo: 'newsletter-subscribers';
        value: number | NewsletterSubscriber;
      } | null)
    | ({
        relationTo: 'images';
        value: number | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: number | Video;
      } | null)
    | ({
        relationTo: 'models';
        value: number | Model;
      } | null)
    | ({
        relationTo: 'documents';
        value: number | Document;
      } | null)
    | ({
        relationTo: 'attachments';
        value: number | Attachment;
      } | null)
    | ({
        relationTo: 'solar-panels';
        value: number | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: number | PumpController;
      } | null)
    | ({
        relationTo: 'warranties';
        value: number | Warranty;
      } | null)
    | ({
        relationTo: 'instructions';
        value: number | Instruction;
      } | null)
    | ({
        relationTo: 'certifications';
        value: number | Certification;
      } | null)
    | ({
        relationTo: 'packaging-configs';
        value: number | PackagingConfig;
      } | null)
    | ({
        relationTo: 'datasheets';
        value: number | Datasheet;
      } | null)
    | ({
        relationTo: 'drawings';
        value: number | Drawing;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        heroBlock?: T | HeroBlockTypeSelect<T>;
        contentBlock?: T | ContentBlockTypeSelect<T>;
        callToActionBlock?: T | CallToActionBlockTypeSelect<T>;
        mediaBlock?: T | MediaBlockTypeSelect<T>;
        featureBlock?: T | FeatureBlockTypeSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlockType_select".
 */
export interface HeroBlockTypeSelect<T extends boolean = true> {
  eyebrow?: T;
  title?: T;
  subtitle?: T;
  desc?: T;
  ctaPrimary?:
    | T
    | {
        type?: T;
        internal?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  ctaSecondary?:
    | T
    | {
        type?: T;
        internal?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  media?: T;
  posX?: T;
  posY?: T;
  posZ?: T;
  rotX?: T;
  rotY?: T;
  rotZ?: T;
  scale?: T;
  animations?:
    | T
    | {
        type?: T;
        trigger?: T;
        easing?: T;
        duration?: T;
        delay?: T;
        posValues?:
          | T
          | {
              from?:
                | T
                | {
                    x?: T;
                    y?: T;
                    z?: T;
                  };
              to?:
                | T
                | {
                    x?: T;
                    y?: T;
                    z?: T;
                  };
            };
        rotValues?:
          | T
          | {
              from?:
                | T
                | {
                    x?: T;
                    y?: T;
                    z?: T;
                  };
              to?:
                | T
                | {
                    x?: T;
                    y?: T;
                    z?: T;
                  };
            };
        scaleValues?:
          | T
          | {
              from?: T;
              to?: T;
            };
        scrollSettings?:
          | T
          | {
              start?: T;
              end?: T;
              scrub?: T;
            };
        id?: T;
      };
  textPlacement?: T;
  textAlignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockType_select".
 */
export interface ContentBlockTypeSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              internal?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlockType_select".
 */
export interface CallToActionBlockTypeSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              internal?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockType_select".
 */
export interface MediaBlockTypeSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlockType_select".
 */
export interface FeatureBlockTypeSelect<T extends boolean = true> {
  eyebrow?: T;
  title?: T;
  subtitle?: T;
  desc?: T;
  ctaPrimary?:
    | T
    | {
        type?: T;
        internal?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  ctaSecondary?:
    | T
    | {
        type?: T;
        internal?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  features?:
    | T
    | {
        image?: T;
        title?: T;
        desc?: T;
        id?: T;
      };
  textPlacement?: T;
  textAlignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries_select".
 */
export interface IndustriesSelect<T extends boolean = true> {
  title?: T;
  desc?: T;
  cover?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  state?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries_select".
 */
export interface InquiriesSelect<T extends boolean = true> {
  formType?: T;
  relatedProduct?: T;
  status?: T;
  internalNotes?: T;
  scheduledDate?: T;
  basicInfo?:
    | T
    | {
        name?: T;
        email?: T;
        phone?: T;
        requirements?: T;
      };
  companyInfo?:
    | T
    | {
        company?: T;
        position?: T;
        type?: T;
        country?: T;
        website?: T;
        employees?: T;
      };
  productInfo?:
    | T
    | {
        productCategory?: T;
        productName?: T;
        qty?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        frequency?: T;
        destination?: T;
        timeline?: T;
      };
  contactPreferences?:
    | T
    | {
        contactEmail?: T;
        contactPhone?: T;
        contactWhatsapp?: T;
      };
  attachments?:
    | T
    | {
        file?: T;
        id?: T;
      };
  metadata?:
    | T
    | {
        source?: T;
        page?: T;
        ipAddress?: T;
        userAgent?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers_select".
 */
export interface NewsletterSubscribersSelect<T extends boolean = true> {
  email?: T;
  name?: T;
  status?: T;
  metadata?:
    | T
    | {
        page?: T;
        ipAddress?: T;
        userAgent?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  duration?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models_select".
 */
export interface ModelsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments_select".
 */
export interface AttachmentsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panels_select".
 */
export interface SolarPanelsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  cover?: T;
  datasheet?: T;
  relatedInquires?: T;
  modelName?: T;
  desc?: T;
  industry?: T;
  gallery?: T;
  enableVariants?: T;
  vars?:
    | T
    | {
        spv?: T | SolarPanelVariantBlockTypeSelect<T>;
      };
  three?:
    | T
    | {
        enabled?: T;
        model?: T;
        variants?:
          | T
          | {
              name?: T;
              color?:
                | T
                | {
                    frame?: T;
                    glass?: T;
                    backsheet?: T;
                  };
              id?: T;
            };
      };
  features?:
    | T
    | {
        productFeatureBlock?: T | ProductFeatureBlockTypeSelect<T>;
      };
  dimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  weight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  drawing?: T;
  cell?:
    | T
    | {
        type?: T;
        tech?: T;
        size?:
          | T
          | {
              length?: T;
              width?: T;
            };
        count?: T;
      };
  facial?: T;
  bifaciality?: T;
  glass?:
    | T
    | {
        type?: T;
        thickness?: T;
        desc?: T;
      };
  frame?: T;
  junction?: T;
  connector?: T;
  temp?:
    | T
    | {
        min?: T;
        max?: T;
      };
  hail?: T;
  loads?:
    | T
    | {
        wind?: T;
        snow?: T;
      };
  powerRange?:
    | T
    | {
        min?: T;
        max?: T;
        step?: T;
        points?:
          | T
          | {
              pmax?: T;
              efficiency?: T;
              vmp?: T;
              imp?: T;
              voc?: T;
              isc?: T;
              id?: T;
            };
      };
  tempCo?:
    | T
    | {
        pmax?: T;
        isc?: T;
        voc?: T;
        noct?: T;
      };
  maxRatings?:
    | T
    | {
        fuse?: T;
        voltage?: T;
        fire?: T;
      };
  moq?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  leadTime?:
    | T
    | {
        range?:
          | T
          | {
              min?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
              max?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
              duration?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
            };
        id?: T;
      };
  packagingConfig?: T;
  warranties?: T;
  instructions?: T;
  certifications?: T;
  relatedProducts?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolarPanelVariantBlockType_select".
 */
export interface SolarPanelVariantBlockTypeSelect<T extends boolean = true> {
  sku?: T;
  frame?: T;
  panel?: T;
  gallery?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFeatureBlockType_select".
 */
export interface ProductFeatureBlockTypeSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  iconName?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controllers_select".
 */
export interface PumpControllersSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  cover?: T;
  datasheet?: T;
  relatedInquires?: T;
  modelName?: T;
  desc?: T;
  industry?: T;
  gallery?: T;
  enableVariants?: T;
  vars?:
    | T
    | {
        pcv?: T | PumpControllerVariantBlockTypeSelect<T>;
      };
  three?:
    | T
    | {
        enabled?: T;
        model?: T;
        variants?:
          | T
          | {
              name?: T;
              color?:
                | T
                | {
                    frame?: T;
                    glass?: T;
                    backsheet?: T;
                  };
              id?: T;
            };
      };
  features?:
    | T
    | {
        productFeatureBlock?: T | ProductFeatureBlockTypeSelect<T>;
      };
  type?: T;
  maxVoltage?: T;
  maxCurrent?: T;
  maxPower?: T;
  startingPressure?: T;
  maxPressure?: T;
  tempRange?:
    | T
    | {
        min?: T;
        max?: T;
      };
  moq?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  leadTime?:
    | T
    | {
        range?:
          | T
          | {
              min?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
              max?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
              duration?:
                | T
                | {
                    value?: T;
                    unit?: T;
                  };
            };
        id?: T;
      };
  packagingConfig?: T;
  warranties?: T;
  instructions?: T;
  certifications?: T;
  relatedProducts?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PumpControllerVariantBlockType_select".
 */
export interface PumpControllerVariantBlockTypeSelect<T extends boolean = true> {
  sku?: T;
  color?: T;
  gallery?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warranties_select".
 */
export interface WarrantiesSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  desc?: T;
  duration?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructions_select".
 */
export interface InstructionsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications_select".
 */
export interface CertificationsSelect<T extends boolean = true> {
  name?: T;
  desc?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "packaging-configs_select".
 */
export interface PackagingConfigsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  unitQty?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  unitDimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  unitWeight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  qtyPerPallet?: T;
  palletDimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  palletWeight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  containerType?: T;
  pltsPerContainer?: T;
  totalQty?: T;
  totalWeight?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasheets_select".
 */
export interface DatasheetsSelect<T extends boolean = true> {
  title?: T;
  desc?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drawings_select".
 */
export interface DrawingsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Company Section for the footer
   */
  companySection?: {
    logo?: ('withSlogan' | 'withoutSlogan') | null;
    useCompanyDescription?: ('yes' | 'no') | null;
    companyDescription?: ('shortDescription' | 'longDescription') | null;
    /**
     * Enable social links in the footer
     */
    showSocialLinks?: boolean | null;
    /**
     * Enable newsletter in the footer
     */
    showNewsletter?: boolean | null;
  };
  /**
   * Add multiple columns to organize footer content
   */
  columns?:
    | {
        size?: ('small' | 'medium' | 'large') | null;
        blockType?: ('linkGroup' | 'content' | 'contactInfo') | null;
        linkGroup?: {
          title: string;
          links?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  internal?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'solar-panels';
                        value: number | SolarPanel;
                      } | null)
                    | ({
                        relationTo: 'pump-controllers';
                        value: number | PumpController;
                      } | null)
                    | ({
                        relationTo: 'industries';
                        value: number | Industry;
                      } | null);
                  /**
                   * External URL will be opened in a new tab.
                   */
                  url?: string | null;
                  label?: string | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        content?: {
          title?: string | null;
          richText?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
      }[]
    | null;
  bottomBar?: {
    copyright?: string | null;
    links?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            internal?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'solar-panels';
                  value: number | SolarPanel;
                } | null)
              | ({
                  relationTo: 'pump-controllers';
                  value: number | PumpController;
                } | null)
              | ({
                  relationTo: 'industries';
                  value: number | Industry;
                } | null);
            /**
             * External URL will be opened in a new tab.
             */
            url?: string | null;
            label?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Configure website navigation
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Configure navigation menu items
   */
  items?:
    | {
        text: string;
        link?: {
          type?: ('internal' | 'external') | null;
          internal?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'solar-panels';
                value: number | SolarPanel;
              } | null)
            | ({
                relationTo: 'pump-controllers';
                value: number | PumpController;
              } | null)
            | ({
                relationTo: 'industries';
                value: number | Industry;
              } | null);
          /**
           * External URL will be opened in a new tab.
           */
          url?: string | null;
          label?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        /**
         * Add sections to create a dropdown or mega menu
         */
        sections?:
          | {
              type?: ('links' | 'banner') | null;
              linksSection?: {
                title?: string | null;
                items?:
                  | {
                      title: string;
                      desc?: string | null;
                      link: {
                        type?: ('internal' | 'external') | null;
                        internal?:
                          | ({
                              relationTo: 'pages';
                              value: number | Page;
                            } | null)
                          | ({
                              relationTo: 'solar-panels';
                              value: number | SolarPanel;
                            } | null)
                          | ({
                              relationTo: 'pump-controllers';
                              value: number | PumpController;
                            } | null)
                          | ({
                              relationTo: 'industries';
                              value: number | Industry;
                            } | null);
                        /**
                         * External URL will be opened in a new tab.
                         */
                        url?: string | null;
                        label: string;
                        /**
                         * Choose how the link should be rendered.
                         */
                        appearance?: ('default' | 'outline') | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                isExtended?: boolean | null;
              };
              banner?: {
                title: string;
                desc?: string | null;
                media?:
                  | ({
                      relationTo: 'images';
                      value: number | Image;
                    } | null)
                  | ({
                      relationTo: 'videos';
                      value: number | Video;
                    } | null);
                link?: {
                  type?: ('internal' | 'external') | null;
                  internal?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'solar-panels';
                        value: number | SolarPanel;
                      } | null)
                    | ({
                        relationTo: 'pump-controllers';
                        value: number | PumpController;
                      } | null)
                    | ({
                        relationTo: 'industries';
                        value: number | Industry;
                      } | null);
                  /**
                   * External URL will be opened in a new tab.
                   */
                  url?: string | null;
                  label?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline') | null;
                };
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  settings?: {
    desktop?: {
      alignment?: ('left' | 'center' | 'right') | null;
    };
    mobile?: {
      hamburgerPosition?: ('left' | 'right') | null;
      animation?: ('slide' | 'fade') | null;
      showAuthButtons?: boolean | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info".
 */
export interface CompanyInfo {
  id: number;
  name: string;
  shortDescription: string;
  longDescription: string;
  vat?: string | null;
  registrationNumber?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info".
 */
export interface ContactInfo {
  id: number;
  email: string;
  phone: string;
  /**
   * The first address will be used as the headquarters address.
   */
  addresses: {
    line1: string;
    line2?: string | null;
    city: string;
    state?: string | null;
    zip?: string | null;
    country: string;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  companySection?:
    | T
    | {
        logo?: T;
        useCompanyDescription?: T;
        companyDescription?: T;
        showSocialLinks?: T;
        showNewsletter?: T;
      };
  columns?:
    | T
    | {
        size?: T;
        blockType?: T;
        linkGroup?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          internal?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
            };
        content?:
          | T
          | {
              title?: T;
              richText?: T;
            };
        id?: T;
      };
  bottomBar?:
    | T
    | {
        copyright?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    internal?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  items?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              type?: T;
              internal?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        sections?:
          | T
          | {
              type?: T;
              linksSection?:
                | T
                | {
                    title?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          desc?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                internal?: T;
                                url?: T;
                                label?: T;
                                appearance?: T;
                              };
                          id?: T;
                        };
                    isExtended?: T;
                  };
              banner?:
                | T
                | {
                    title?: T;
                    desc?: T;
                    media?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          internal?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                  };
              id?: T;
            };
        id?: T;
      };
  settings?:
    | T
    | {
        desktop?:
          | T
          | {
              alignment?: T;
            };
        mobile?:
          | T
          | {
              hamburgerPosition?: T;
              animation?: T;
              showAuthButtons?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info_select".
 */
export interface CompanyInfoSelect<T extends boolean = true> {
  name?: T;
  shortDescription?: T;
  longDescription?: T;
  vat?: T;
  registrationNumber?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info_select".
 */
export interface ContactInfoSelect<T extends boolean = true> {
  email?: T;
  phone?: T;
  addresses?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        zip?: T;
        country?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: number | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: number | PumpController;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}