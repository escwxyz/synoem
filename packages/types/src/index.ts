/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IconName".
 */
export type IconName =
  | 'lucide:a-arrow-down'
  | 'lucide:a-arrow-up'
  | 'lucide:a-large-small'
  | 'lucide:accessibility'
  | 'lucide:activity'
  | 'lucide:air-vent'
  | 'lucide:airplay'
  | 'lucide:alarm-clock-check'
  | 'lucide:alarm-clock-minus'
  | 'lucide:alarm-clock-off'
  | 'lucide:alarm-clock-plus'
  | 'lucide:alarm-clock'
  | 'lucide:alarm-smoke'
  | 'lucide:album'
  | 'lucide:align-center-horizontal'
  | 'lucide:align-center-vertical'
  | 'lucide:align-center'
  | 'lucide:align-end-horizontal'
  | 'lucide:align-end-vertical'
  | 'lucide:align-horizontal-distribute-center'
  | 'lucide:align-horizontal-distribute-end'
  | 'lucide:align-horizontal-distribute-start'
  | 'lucide:align-horizontal-justify-center'
  | 'lucide:align-horizontal-justify-end'
  | 'lucide:align-horizontal-justify-start'
  | 'lucide:align-horizontal-space-around'
  | 'lucide:align-horizontal-space-between'
  | 'lucide:align-justify'
  | 'lucide:align-left'
  | 'lucide:align-right'
  | 'lucide:align-start-horizontal'
  | 'lucide:align-start-vertical'
  | 'lucide:align-vertical-distribute-center'
  | 'lucide:align-vertical-distribute-end'
  | 'lucide:align-vertical-distribute-start'
  | 'lucide:align-vertical-justify-center'
  | 'lucide:align-vertical-justify-end'
  | 'lucide:align-vertical-justify-start'
  | 'lucide:align-vertical-space-around'
  | 'lucide:align-vertical-space-between'
  | 'lucide:ambulance'
  | 'lucide:ampersand'
  | 'lucide:ampersands'
  | 'lucide:amphora'
  | 'lucide:anchor'
  | 'lucide:angry'
  | 'lucide:annoyed'
  | 'lucide:antenna'
  | 'lucide:anvil'
  | 'lucide:aperture'
  | 'lucide:app-window-mac'
  | 'lucide:app-window'
  | 'lucide:apple'
  | 'lucide:archive-restore'
  | 'lucide:archive-x'
  | 'lucide:archive'
  | 'lucide:armchair'
  | 'lucide:arrow-big-down-dash'
  | 'lucide:arrow-big-down'
  | 'lucide:arrow-big-left-dash'
  | 'lucide:arrow-big-left'
  | 'lucide:arrow-big-right-dash'
  | 'lucide:arrow-big-right'
  | 'lucide:arrow-big-up-dash'
  | 'lucide:arrow-big-up'
  | 'lucide:arrow-down-0-1'
  | 'lucide:arrow-down-1-0'
  | 'lucide:arrow-down-a-z'
  | 'lucide:arrow-down-from-line'
  | 'lucide:arrow-down-left'
  | 'lucide:arrow-down-narrow-wide'
  | 'lucide:arrow-down-right'
  | 'lucide:arrow-down-to-dot'
  | 'lucide:arrow-down-to-line'
  | 'lucide:arrow-down-up'
  | 'lucide:arrow-down-wide-narrow'
  | 'lucide:arrow-down-z-a'
  | 'lucide:arrow-down'
  | 'lucide:arrow-left-from-line'
  | 'lucide:arrow-left-right'
  | 'lucide:arrow-left-to-line'
  | 'lucide:arrow-left'
  | 'lucide:arrow-right-from-line'
  | 'lucide:arrow-right-left'
  | 'lucide:arrow-right-to-line'
  | 'lucide:arrow-right'
  | 'lucide:arrow-up-0-1'
  | 'lucide:arrow-up-1-0'
  | 'lucide:arrow-up-a-z'
  | 'lucide:arrow-up-down'
  | 'lucide:arrow-up-from-dot'
  | 'lucide:arrow-up-from-line'
  | 'lucide:arrow-up-left'
  | 'lucide:arrow-up-narrow-wide'
  | 'lucide:arrow-up-right'
  | 'lucide:arrow-up-to-line'
  | 'lucide:arrow-up-wide-narrow'
  | 'lucide:arrow-up-z-a'
  | 'lucide:arrow-up'
  | 'lucide:arrows-up-from-line'
  | 'lucide:asterisk'
  | 'lucide:at-sign'
  | 'lucide:atom'
  | 'lucide:audio-lines'
  | 'lucide:audio-waveform'
  | 'lucide:award'
  | 'lucide:axe'
  | 'lucide:axis-3d'
  | 'lucide:baby'
  | 'lucide:backpack'
  | 'lucide:badge-alert'
  | 'lucide:badge-cent'
  | 'lucide:badge-check'
  | 'lucide:badge-dollar-sign'
  | 'lucide:badge-euro'
  | 'lucide:badge-help'
  | 'lucide:badge-indian-rupee'
  | 'lucide:badge-info'
  | 'lucide:badge-japanese-yen'
  | 'lucide:badge-minus'
  | 'lucide:badge-percent'
  | 'lucide:badge-plus'
  | 'lucide:badge-pound-sterling'
  | 'lucide:badge-russian-ruble'
  | 'lucide:badge-swiss-franc'
  | 'lucide:badge-x'
  | 'lucide:badge'
  | 'lucide:baggage-claim'
  | 'lucide:ban'
  | 'lucide:banana'
  | 'lucide:bandage'
  | 'lucide:banknote-arrow-down'
  | 'lucide:banknote-arrow-up'
  | 'lucide:banknote-x'
  | 'lucide:banknote'
  | 'lucide:barcode'
  | 'lucide:baseline'
  | 'lucide:bath'
  | 'lucide:battery-charging'
  | 'lucide:battery-full'
  | 'lucide:battery-low'
  | 'lucide:battery-medium'
  | 'lucide:battery-plus'
  | 'lucide:battery-warning'
  | 'lucide:battery'
  | 'lucide:beaker'
  | 'lucide:bean-off'
  | 'lucide:bean'
  | 'lucide:bed-double'
  | 'lucide:bed-single'
  | 'lucide:bed'
  | 'lucide:beef'
  | 'lucide:beer-off'
  | 'lucide:beer'
  | 'lucide:bell-dot'
  | 'lucide:bell-electric'
  | 'lucide:bell-minus'
  | 'lucide:bell-off'
  | 'lucide:bell-plus'
  | 'lucide:bell-ring'
  | 'lucide:bell'
  | 'lucide:between-horizontal-end'
  | 'lucide:between-horizontal-start'
  | 'lucide:between-vertical-end'
  | 'lucide:between-vertical-start'
  | 'lucide:biceps-flexed'
  | 'lucide:bike'
  | 'lucide:binary'
  | 'lucide:binoculars'
  | 'lucide:biohazard'
  | 'lucide:bird'
  | 'lucide:bitcoin'
  | 'lucide:blend'
  | 'lucide:blinds'
  | 'lucide:blocks'
  | 'lucide:bluetooth-connected'
  | 'lucide:bluetooth-off'
  | 'lucide:bluetooth-searching'
  | 'lucide:bluetooth'
  | 'lucide:bold'
  | 'lucide:bolt'
  | 'lucide:bomb'
  | 'lucide:bone'
  | 'lucide:book-a'
  | 'lucide:book-audio'
  | 'lucide:book-check'
  | 'lucide:book-copy'
  | 'lucide:book-dashed'
  | 'lucide:book-down'
  | 'lucide:book-headphones'
  | 'lucide:book-heart'
  | 'lucide:book-image'
  | 'lucide:book-key'
  | 'lucide:book-lock'
  | 'lucide:book-marked'
  | 'lucide:book-minus'
  | 'lucide:book-open-check'
  | 'lucide:book-open-text'
  | 'lucide:book-open'
  | 'lucide:book-plus'
  | 'lucide:book-text'
  | 'lucide:book-type'
  | 'lucide:book-up-2'
  | 'lucide:book-up'
  | 'lucide:book-user'
  | 'lucide:book-x'
  | 'lucide:book'
  | 'lucide:bookmark-check'
  | 'lucide:bookmark-minus'
  | 'lucide:bookmark-plus'
  | 'lucide:bookmark-x'
  | 'lucide:bookmark'
  | 'lucide:boom-box'
  | 'lucide:bot-message-square'
  | 'lucide:bot-off'
  | 'lucide:bot'
  | 'lucide:bow-arrow'
  | 'lucide:box'
  | 'lucide:boxes'
  | 'lucide:braces'
  | 'lucide:brackets'
  | 'lucide:brain-circuit'
  | 'lucide:brain-cog'
  | 'lucide:brain'
  | 'lucide:brick-wall-fire'
  | 'lucide:brick-wall'
  | 'lucide:briefcase-business'
  | 'lucide:briefcase-conveyor-belt'
  | 'lucide:briefcase-medical'
  | 'lucide:briefcase'
  | 'lucide:bring-to-front'
  | 'lucide:brush-cleaning'
  | 'lucide:brush'
  | 'lucide:bubbles'
  | 'lucide:bug-off'
  | 'lucide:bug-play'
  | 'lucide:bug'
  | 'lucide:building-2'
  | 'lucide:building'
  | 'lucide:bus-front'
  | 'lucide:bus'
  | 'lucide:cable-car'
  | 'lucide:cable'
  | 'lucide:cake-slice'
  | 'lucide:cake'
  | 'lucide:calculator'
  | 'lucide:calendar-1'
  | 'lucide:calendar-arrow-down'
  | 'lucide:calendar-arrow-up'
  | 'lucide:calendar-check-2'
  | 'lucide:calendar-check'
  | 'lucide:calendar-clock'
  | 'lucide:calendar-cog'
  | 'lucide:calendar-days'
  | 'lucide:calendar-fold'
  | 'lucide:calendar-heart'
  | 'lucide:calendar-minus-2'
  | 'lucide:calendar-minus'
  | 'lucide:calendar-off'
  | 'lucide:calendar-plus-2'
  | 'lucide:calendar-plus'
  | 'lucide:calendar-range'
  | 'lucide:calendar-search'
  | 'lucide:calendar-sync'
  | 'lucide:calendar-x-2'
  | 'lucide:calendar-x'
  | 'lucide:calendar'
  | 'lucide:camera-off'
  | 'lucide:camera'
  | 'lucide:candy-cane'
  | 'lucide:candy-off'
  | 'lucide:candy'
  | 'lucide:cannabis'
  | 'lucide:captions-off'
  | 'lucide:captions'
  | 'lucide:car-front'
  | 'lucide:car-taxi-front'
  | 'lucide:car'
  | 'lucide:caravan'
  | 'lucide:card-sim'
  | 'lucide:carrot'
  | 'lucide:case-lower'
  | 'lucide:case-sensitive'
  | 'lucide:case-upper'
  | 'lucide:cassette-tape'
  | 'lucide:cast'
  | 'lucide:castle'
  | 'lucide:cat'
  | 'lucide:cctv'
  | 'lucide:chart-area'
  | 'lucide:chart-bar-big'
  | 'lucide:chart-bar-decreasing'
  | 'lucide:chart-bar-increasing'
  | 'lucide:chart-bar-stacked'
  | 'lucide:chart-bar'
  | 'lucide:chart-candlestick'
  | 'lucide:chart-column-big'
  | 'lucide:chart-column-decreasing'
  | 'lucide:chart-column-increasing'
  | 'lucide:chart-column-stacked'
  | 'lucide:chart-column'
  | 'lucide:chart-gantt'
  | 'lucide:chart-line'
  | 'lucide:chart-network'
  | 'lucide:chart-no-axes-column-decreasing'
  | 'lucide:chart-no-axes-column-increasing'
  | 'lucide:chart-no-axes-column'
  | 'lucide:chart-no-axes-combined'
  | 'lucide:chart-no-axes-gantt'
  | 'lucide:chart-pie'
  | 'lucide:chart-scatter'
  | 'lucide:chart-spline'
  | 'lucide:check-check'
  | 'lucide:check-line'
  | 'lucide:check'
  | 'lucide:chef-hat'
  | 'lucide:cherry'
  | 'lucide:chevron-down'
  | 'lucide:chevron-first'
  | 'lucide:chevron-last'
  | 'lucide:chevron-left'
  | 'lucide:chevron-right'
  | 'lucide:chevron-up'
  | 'lucide:chevrons-down-up'
  | 'lucide:chevrons-down'
  | 'lucide:chevrons-left-right-ellipsis'
  | 'lucide:chevrons-left-right'
  | 'lucide:chevrons-left'
  | 'lucide:chevrons-right-left'
  | 'lucide:chevrons-right'
  | 'lucide:chevrons-up-down'
  | 'lucide:chevrons-up'
  | 'lucide:chrome'
  | 'lucide:church'
  | 'lucide:cigarette-off'
  | 'lucide:cigarette'
  | 'lucide:circle-alert'
  | 'lucide:circle-arrow-down'
  | 'lucide:circle-arrow-left'
  | 'lucide:circle-arrow-out-down-left'
  | 'lucide:circle-arrow-out-down-right'
  | 'lucide:circle-arrow-out-up-left'
  | 'lucide:circle-arrow-out-up-right'
  | 'lucide:circle-arrow-right'
  | 'lucide:circle-arrow-up'
  | 'lucide:circle-check-big'
  | 'lucide:circle-check'
  | 'lucide:circle-chevron-down'
  | 'lucide:circle-chevron-left'
  | 'lucide:circle-chevron-right'
  | 'lucide:circle-chevron-up'
  | 'lucide:circle-dashed'
  | 'lucide:circle-divide'
  | 'lucide:circle-dollar-sign'
  | 'lucide:circle-dot-dashed'
  | 'lucide:circle-dot'
  | 'lucide:circle-ellipsis'
  | 'lucide:circle-equal'
  | 'lucide:circle-fading-arrow-up'
  | 'lucide:circle-fading-plus'
  | 'lucide:circle-gauge'
  | 'lucide:circle-help'
  | 'lucide:circle-minus'
  | 'lucide:circle-off'
  | 'lucide:circle-parking-off'
  | 'lucide:circle-parking'
  | 'lucide:circle-pause'
  | 'lucide:circle-percent'
  | 'lucide:circle-play'
  | 'lucide:circle-plus'
  | 'lucide:circle-pound-sterling'
  | 'lucide:circle-power'
  | 'lucide:circle-slash-2'
  | 'lucide:circle-slash'
  | 'lucide:circle-small'
  | 'lucide:circle-stop'
  | 'lucide:circle-user-round'
  | 'lucide:circle-user'
  | 'lucide:circle-x'
  | 'lucide:circle'
  | 'lucide:circuit-board'
  | 'lucide:citrus'
  | 'lucide:clapperboard'
  | 'lucide:clipboard-check'
  | 'lucide:clipboard-copy'
  | 'lucide:clipboard-list'
  | 'lucide:clipboard-minus'
  | 'lucide:clipboard-paste'
  | 'lucide:clipboard-pen-line'
  | 'lucide:clipboard-pen'
  | 'lucide:clipboard-plus'
  | 'lucide:clipboard-type'
  | 'lucide:clipboard-x'
  | 'lucide:clipboard'
  | 'lucide:clock-1'
  | 'lucide:clock-10'
  | 'lucide:clock-11'
  | 'lucide:clock-12'
  | 'lucide:clock-2'
  | 'lucide:clock-3'
  | 'lucide:clock-4'
  | 'lucide:clock-5'
  | 'lucide:clock-6'
  | 'lucide:clock-7'
  | 'lucide:clock-8'
  | 'lucide:clock-9'
  | 'lucide:clock-alert'
  | 'lucide:clock-arrow-down'
  | 'lucide:clock-arrow-up'
  | 'lucide:clock-fading'
  | 'lucide:clock-plus'
  | 'lucide:clock'
  | 'lucide:cloud-alert'
  | 'lucide:cloud-check'
  | 'lucide:cloud-cog'
  | 'lucide:cloud-download'
  | 'lucide:cloud-drizzle'
  | 'lucide:cloud-fog'
  | 'lucide:cloud-hail'
  | 'lucide:cloud-lightning'
  | 'lucide:cloud-moon-rain'
  | 'lucide:cloud-moon'
  | 'lucide:cloud-off'
  | 'lucide:cloud-rain-wind'
  | 'lucide:cloud-rain'
  | 'lucide:cloud-snow'
  | 'lucide:cloud-sun-rain'
  | 'lucide:cloud-sun'
  | 'lucide:cloud-upload'
  | 'lucide:cloud'
  | 'lucide:cloudy'
  | 'lucide:clover'
  | 'lucide:club'
  | 'lucide:code-xml'
  | 'lucide:code'
  | 'lucide:codepen'
  | 'lucide:codesandbox'
  | 'lucide:coffee'
  | 'lucide:cog'
  | 'lucide:coins'
  | 'lucide:columns-2'
  | 'lucide:columns-3-cog'
  | 'lucide:columns-3'
  | 'lucide:columns-4'
  | 'lucide:combine'
  | 'lucide:command'
  | 'lucide:compass'
  | 'lucide:component'
  | 'lucide:computer'
  | 'lucide:concierge-bell'
  | 'lucide:cone'
  | 'lucide:construction'
  | 'lucide:contact-round'
  | 'lucide:contact'
  | 'lucide:container'
  | 'lucide:contrast'
  | 'lucide:cookie'
  | 'lucide:cooking-pot'
  | 'lucide:copy-check'
  | 'lucide:copy-minus'
  | 'lucide:copy-plus'
  | 'lucide:copy-slash'
  | 'lucide:copy-x'
  | 'lucide:copy'
  | 'lucide:copyleft'
  | 'lucide:copyright'
  | 'lucide:corner-down-left'
  | 'lucide:corner-down-right'
  | 'lucide:corner-left-down'
  | 'lucide:corner-left-up'
  | 'lucide:corner-right-down'
  | 'lucide:corner-right-up'
  | 'lucide:corner-up-left'
  | 'lucide:corner-up-right'
  | 'lucide:cpu'
  | 'lucide:creative-commons'
  | 'lucide:credit-card'
  | 'lucide:croissant'
  | 'lucide:crop'
  | 'lucide:cross'
  | 'lucide:crosshair'
  | 'lucide:crown'
  | 'lucide:cuboid'
  | 'lucide:cup-soda'
  | 'lucide:currency'
  | 'lucide:cylinder'
  | 'lucide:dam'
  | 'lucide:database-backup'
  | 'lucide:database-zap'
  | 'lucide:database'
  | 'lucide:decimals-arrow-left'
  | 'lucide:decimals-arrow-right'
  | 'lucide:delete'
  | 'lucide:dessert'
  | 'lucide:diameter'
  | 'lucide:diamond-minus'
  | 'lucide:diamond-percent'
  | 'lucide:diamond-plus'
  | 'lucide:diamond'
  | 'lucide:dice-1'
  | 'lucide:dice-2'
  | 'lucide:dice-3'
  | 'lucide:dice-4'
  | 'lucide:dice-5'
  | 'lucide:dice-6'
  | 'lucide:dices'
  | 'lucide:diff'
  | 'lucide:disc-2'
  | 'lucide:disc-3'
  | 'lucide:disc-album'
  | 'lucide:disc'
  | 'lucide:divide'
  | 'lucide:dna-off'
  | 'lucide:dna'
  | 'lucide:dock'
  | 'lucide:dog'
  | 'lucide:dollar-sign'
  | 'lucide:donut'
  | 'lucide:door-closed-locked'
  | 'lucide:door-closed'
  | 'lucide:door-open'
  | 'lucide:dot'
  | 'lucide:download'
  | 'lucide:drafting-compass'
  | 'lucide:drama'
  | 'lucide:dribbble'
  | 'lucide:drill'
  | 'lucide:droplet-off'
  | 'lucide:droplet'
  | 'lucide:droplets'
  | 'lucide:drum'
  | 'lucide:drumstick'
  | 'lucide:dumbbell'
  | 'lucide:ear-off'
  | 'lucide:ear'
  | 'lucide:earth-lock'
  | 'lucide:earth'
  | 'lucide:eclipse'
  | 'lucide:egg-fried'
  | 'lucide:egg-off'
  | 'lucide:egg'
  | 'lucide:ellipsis-vertical'
  | 'lucide:ellipsis'
  | 'lucide:equal-approximately'
  | 'lucide:equal-not'
  | 'lucide:equal'
  | 'lucide:eraser'
  | 'lucide:ethernet-port'
  | 'lucide:euro'
  | 'lucide:expand'
  | 'lucide:external-link'
  | 'lucide:eye-closed'
  | 'lucide:eye-off'
  | 'lucide:eye'
  | 'lucide:facebook'
  | 'lucide:factory'
  | 'lucide:fan'
  | 'lucide:fast-forward'
  | 'lucide:feather'
  | 'lucide:fence'
  | 'lucide:ferris-wheel'
  | 'lucide:figma'
  | 'lucide:file-archive'
  | 'lucide:file-audio-2'
  | 'lucide:file-audio'
  | 'lucide:file-axis-3d'
  | 'lucide:file-badge-2'
  | 'lucide:file-badge'
  | 'lucide:file-box'
  | 'lucide:file-chart-column-increasing'
  | 'lucide:file-chart-column'
  | 'lucide:file-chart-line'
  | 'lucide:file-chart-pie'
  | 'lucide:file-check-2'
  | 'lucide:file-check'
  | 'lucide:file-clock'
  | 'lucide:file-code-2'
  | 'lucide:file-code'
  | 'lucide:file-cog'
  | 'lucide:file-diff'
  | 'lucide:file-digit'
  | 'lucide:file-down'
  | 'lucide:file-heart'
  | 'lucide:file-image'
  | 'lucide:file-input'
  | 'lucide:file-json-2'
  | 'lucide:file-json'
  | 'lucide:file-key-2'
  | 'lucide:file-key'
  | 'lucide:file-lock-2'
  | 'lucide:file-lock'
  | 'lucide:file-minus-2'
  | 'lucide:file-minus'
  | 'lucide:file-music'
  | 'lucide:file-output'
  | 'lucide:file-pen-line'
  | 'lucide:file-pen'
  | 'lucide:file-plus-2'
  | 'lucide:file-plus'
  | 'lucide:file-question'
  | 'lucide:file-scan'
  | 'lucide:file-search-2'
  | 'lucide:file-search'
  | 'lucide:file-sliders'
  | 'lucide:file-spreadsheet'
  | 'lucide:file-stack'
  | 'lucide:file-symlink'
  | 'lucide:file-terminal'
  | 'lucide:file-text'
  | 'lucide:file-type-2'
  | 'lucide:file-type'
  | 'lucide:file-up'
  | 'lucide:file-user'
  | 'lucide:file-video-2'
  | 'lucide:file-video'
  | 'lucide:file-volume-2'
  | 'lucide:file-volume'
  | 'lucide:file-warning'
  | 'lucide:file-x-2'
  | 'lucide:file-x'
  | 'lucide:file'
  | 'lucide:files'
  | 'lucide:film'
  | 'lucide:fingerprint'
  | 'lucide:fire-extinguisher'
  | 'lucide:fish-off'
  | 'lucide:fish-symbol'
  | 'lucide:fish'
  | 'lucide:flag-off'
  | 'lucide:flag-triangle-left'
  | 'lucide:flag-triangle-right'
  | 'lucide:flag'
  | 'lucide:flame-kindling'
  | 'lucide:flame'
  | 'lucide:flashlight-off'
  | 'lucide:flashlight'
  | 'lucide:flask-conical-off'
  | 'lucide:flask-conical'
  | 'lucide:flask-round'
  | 'lucide:flip-horizontal-2'
  | 'lucide:flip-horizontal'
  | 'lucide:flip-vertical-2'
  | 'lucide:flip-vertical'
  | 'lucide:flower-2'
  | 'lucide:flower'
  | 'lucide:focus'
  | 'lucide:fold-horizontal'
  | 'lucide:fold-vertical'
  | 'lucide:folder-archive'
  | 'lucide:folder-check'
  | 'lucide:folder-clock'
  | 'lucide:folder-closed'
  | 'lucide:folder-code'
  | 'lucide:folder-cog'
  | 'lucide:folder-dot'
  | 'lucide:folder-down'
  | 'lucide:folder-git-2'
  | 'lucide:folder-git'
  | 'lucide:folder-heart'
  | 'lucide:folder-input'
  | 'lucide:folder-kanban'
  | 'lucide:folder-key'
  | 'lucide:folder-lock'
  | 'lucide:folder-minus'
  | 'lucide:folder-open-dot'
  | 'lucide:folder-open'
  | 'lucide:folder-output'
  | 'lucide:folder-pen'
  | 'lucide:folder-plus'
  | 'lucide:folder-root'
  | 'lucide:folder-search-2'
  | 'lucide:folder-search'
  | 'lucide:folder-symlink'
  | 'lucide:folder-sync'
  | 'lucide:folder-tree'
  | 'lucide:folder-up'
  | 'lucide:folder-x'
  | 'lucide:folder'
  | 'lucide:folders'
  | 'lucide:footprints'
  | 'lucide:forklift'
  | 'lucide:forward'
  | 'lucide:frame'
  | 'lucide:framer'
  | 'lucide:frown'
  | 'lucide:fuel'
  | 'lucide:fullscreen'
  | 'lucide:funnel-plus'
  | 'lucide:funnel-x'
  | 'lucide:funnel'
  | 'lucide:gallery-horizontal-end'
  | 'lucide:gallery-horizontal'
  | 'lucide:gallery-thumbnails'
  | 'lucide:gallery-vertical-end'
  | 'lucide:gallery-vertical'
  | 'lucide:gamepad-2'
  | 'lucide:gamepad'
  | 'lucide:gauge'
  | 'lucide:gavel'
  | 'lucide:gem'
  | 'lucide:ghost'
  | 'lucide:gift'
  | 'lucide:git-branch-plus'
  | 'lucide:git-branch'
  | 'lucide:git-commit-horizontal'
  | 'lucide:git-commit-vertical'
  | 'lucide:git-compare-arrows'
  | 'lucide:git-compare'
  | 'lucide:git-fork'
  | 'lucide:git-graph'
  | 'lucide:git-merge'
  | 'lucide:git-pull-request-arrow'
  | 'lucide:git-pull-request-closed'
  | 'lucide:git-pull-request-create-arrow'
  | 'lucide:git-pull-request-create'
  | 'lucide:git-pull-request-draft'
  | 'lucide:git-pull-request'
  | 'lucide:github'
  | 'lucide:gitlab'
  | 'lucide:glass-water'
  | 'lucide:glasses'
  | 'lucide:globe-lock'
  | 'lucide:globe'
  | 'lucide:goal'
  | 'lucide:gpu'
  | 'lucide:grab'
  | 'lucide:graduation-cap'
  | 'lucide:grape'
  | 'lucide:grid-2x2-check'
  | 'lucide:grid-2x2-plus'
  | 'lucide:grid-2x2-x'
  | 'lucide:grid-2x2'
  | 'lucide:grid-3x2'
  | 'lucide:grid-3x3'
  | 'lucide:grip-horizontal'
  | 'lucide:grip-vertical'
  | 'lucide:grip'
  | 'lucide:group'
  | 'lucide:guitar'
  | 'lucide:ham'
  | 'lucide:hamburger'
  | 'lucide:hammer'
  | 'lucide:hand-coins'
  | 'lucide:hand-heart'
  | 'lucide:hand-helping'
  | 'lucide:hand-metal'
  | 'lucide:hand-platter'
  | 'lucide:hand'
  | 'lucide:handshake'
  | 'lucide:hard-drive-download'
  | 'lucide:hard-drive-upload'
  | 'lucide:hard-drive'
  | 'lucide:hard-hat'
  | 'lucide:hash'
  | 'lucide:haze'
  | 'lucide:hdmi-port'
  | 'lucide:heading-1'
  | 'lucide:heading-2'
  | 'lucide:heading-3'
  | 'lucide:heading-4'
  | 'lucide:heading-5'
  | 'lucide:heading-6'
  | 'lucide:heading'
  | 'lucide:headphone-off'
  | 'lucide:headphones'
  | 'lucide:headset'
  | 'lucide:heart-crack'
  | 'lucide:heart-handshake'
  | 'lucide:heart-minus'
  | 'lucide:heart-off'
  | 'lucide:heart-plus'
  | 'lucide:heart-pulse'
  | 'lucide:heart'
  | 'lucide:heater'
  | 'lucide:hexagon'
  | 'lucide:highlighter'
  | 'lucide:history'
  | 'lucide:hop-off'
  | 'lucide:hop'
  | 'lucide:hospital'
  | 'lucide:hotel'
  | 'lucide:hourglass'
  | 'lucide:house-plug'
  | 'lucide:house-plus'
  | 'lucide:house-wifi'
  | 'lucide:house'
  | 'lucide:ice-cream-bowl'
  | 'lucide:ice-cream-cone'
  | 'lucide:id-card-lanyard'
  | 'lucide:id-card'
  | 'lucide:image-down'
  | 'lucide:image-minus'
  | 'lucide:image-off'
  | 'lucide:image-play'
  | 'lucide:image-plus'
  | 'lucide:image-up'
  | 'lucide:image-upscale'
  | 'lucide:image'
  | 'lucide:images'
  | 'lucide:import'
  | 'lucide:inbox'
  | 'lucide:indent-decrease'
  | 'lucide:indent-increase'
  | 'lucide:indian-rupee'
  | 'lucide:infinity'
  | 'lucide:info'
  | 'lucide:inspection-panel'
  | 'lucide:instagram'
  | 'lucide:italic'
  | 'lucide:iteration-ccw'
  | 'lucide:iteration-cw'
  | 'lucide:japanese-yen'
  | 'lucide:joystick'
  | 'lucide:kanban'
  | 'lucide:key-round'
  | 'lucide:key-square'
  | 'lucide:key'
  | 'lucide:keyboard-music'
  | 'lucide:keyboard-off'
  | 'lucide:keyboard'
  | 'lucide:lamp-ceiling'
  | 'lucide:lamp-desk'
  | 'lucide:lamp-floor'
  | 'lucide:lamp-wall-down'
  | 'lucide:lamp-wall-up'
  | 'lucide:lamp'
  | 'lucide:land-plot'
  | 'lucide:landmark'
  | 'lucide:languages'
  | 'lucide:laptop-minimal-check'
  | 'lucide:laptop-minimal'
  | 'lucide:laptop'
  | 'lucide:lasso-select'
  | 'lucide:lasso'
  | 'lucide:laugh'
  | 'lucide:layers-2'
  | 'lucide:layers'
  | 'lucide:layout-dashboard'
  | 'lucide:layout-grid'
  | 'lucide:layout-list'
  | 'lucide:layout-panel-left'
  | 'lucide:layout-panel-top'
  | 'lucide:layout-template'
  | 'lucide:leaf'
  | 'lucide:leafy-green'
  | 'lucide:lectern'
  | 'lucide:letter-text'
  | 'lucide:library-big'
  | 'lucide:library'
  | 'lucide:life-buoy'
  | 'lucide:ligature'
  | 'lucide:lightbulb-off'
  | 'lucide:lightbulb'
  | 'lucide:link-2-off'
  | 'lucide:link-2'
  | 'lucide:link'
  | 'lucide:linkedin'
  | 'lucide:list-check'
  | 'lucide:list-checks'
  | 'lucide:list-collapse'
  | 'lucide:list-end'
  | 'lucide:list-filter-plus'
  | 'lucide:list-filter'
  | 'lucide:list-minus'
  | 'lucide:list-music'
  | 'lucide:list-ordered'
  | 'lucide:list-plus'
  | 'lucide:list-restart'
  | 'lucide:list-start'
  | 'lucide:list-todo'
  | 'lucide:list-tree'
  | 'lucide:list-video'
  | 'lucide:list-x'
  | 'lucide:list'
  | 'lucide:loader-circle'
  | 'lucide:loader-pinwheel'
  | 'lucide:loader'
  | 'lucide:locate-fixed'
  | 'lucide:locate-off'
  | 'lucide:locate'
  | 'lucide:location-edit'
  | 'lucide:lock-keyhole-open'
  | 'lucide:lock-keyhole'
  | 'lucide:lock-open'
  | 'lucide:lock'
  | 'lucide:log-in'
  | 'lucide:log-out'
  | 'lucide:logs'
  | 'lucide:lollipop'
  | 'lucide:luggage'
  | 'lucide:magnet'
  | 'lucide:mail-check'
  | 'lucide:mail-minus'
  | 'lucide:mail-open'
  | 'lucide:mail-plus'
  | 'lucide:mail-question'
  | 'lucide:mail-search'
  | 'lucide:mail-warning'
  | 'lucide:mail-x'
  | 'lucide:mail'
  | 'lucide:mailbox'
  | 'lucide:mails'
  | 'lucide:map-pin-check-inside'
  | 'lucide:map-pin-check'
  | 'lucide:map-pin-house'
  | 'lucide:map-pin-minus-inside'
  | 'lucide:map-pin-minus'
  | 'lucide:map-pin-off'
  | 'lucide:map-pin-plus-inside'
  | 'lucide:map-pin-plus'
  | 'lucide:map-pin-x-inside'
  | 'lucide:map-pin-x'
  | 'lucide:map-pin'
  | 'lucide:map-pinned'
  | 'lucide:map-plus'
  | 'lucide:map'
  | 'lucide:mars-stroke'
  | 'lucide:mars'
  | 'lucide:martini'
  | 'lucide:maximize-2'
  | 'lucide:maximize'
  | 'lucide:medal'
  | 'lucide:megaphone-off'
  | 'lucide:megaphone'
  | 'lucide:meh'
  | 'lucide:memory-stick'
  | 'lucide:menu'
  | 'lucide:merge'
  | 'lucide:message-circle-code'
  | 'lucide:message-circle-dashed'
  | 'lucide:message-circle-heart'
  | 'lucide:message-circle-more'
  | 'lucide:message-circle-off'
  | 'lucide:message-circle-plus'
  | 'lucide:message-circle-question'
  | 'lucide:message-circle-reply'
  | 'lucide:message-circle-warning'
  | 'lucide:message-circle-x'
  | 'lucide:message-circle'
  | 'lucide:message-square-code'
  | 'lucide:message-square-dashed'
  | 'lucide:message-square-diff'
  | 'lucide:message-square-dot'
  | 'lucide:message-square-heart'
  | 'lucide:message-square-lock'
  | 'lucide:message-square-more'
  | 'lucide:message-square-off'
  | 'lucide:message-square-plus'
  | 'lucide:message-square-quote'
  | 'lucide:message-square-reply'
  | 'lucide:message-square-share'
  | 'lucide:message-square-text'
  | 'lucide:message-square-warning'
  | 'lucide:message-square-x'
  | 'lucide:message-square'
  | 'lucide:messages-square'
  | 'lucide:mic-off'
  | 'lucide:mic-vocal'
  | 'lucide:mic'
  | 'lucide:microchip'
  | 'lucide:microscope'
  | 'lucide:microwave'
  | 'lucide:milestone'
  | 'lucide:milk-off'
  | 'lucide:milk'
  | 'lucide:minimize-2'
  | 'lucide:minimize'
  | 'lucide:minus'
  | 'lucide:monitor-check'
  | 'lucide:monitor-cog'
  | 'lucide:monitor-dot'
  | 'lucide:monitor-down'
  | 'lucide:monitor-off'
  | 'lucide:monitor-pause'
  | 'lucide:monitor-play'
  | 'lucide:monitor-smartphone'
  | 'lucide:monitor-speaker'
  | 'lucide:monitor-stop'
  | 'lucide:monitor-up'
  | 'lucide:monitor-x'
  | 'lucide:monitor'
  | 'lucide:moon-star'
  | 'lucide:moon'
  | 'lucide:mountain-snow'
  | 'lucide:mountain'
  | 'lucide:mouse-off'
  | 'lucide:mouse-pointer-2'
  | 'lucide:mouse-pointer-ban'
  | 'lucide:mouse-pointer-click'
  | 'lucide:mouse-pointer'
  | 'lucide:mouse'
  | 'lucide:move-3d'
  | 'lucide:move-diagonal-2'
  | 'lucide:move-diagonal'
  | 'lucide:move-down-left'
  | 'lucide:move-down-right'
  | 'lucide:move-down'
  | 'lucide:move-horizontal'
  | 'lucide:move-left'
  | 'lucide:move-right'
  | 'lucide:move-up-left'
  | 'lucide:move-up-right'
  | 'lucide:move-up'
  | 'lucide:move-vertical'
  | 'lucide:move'
  | 'lucide:music-2'
  | 'lucide:music-3'
  | 'lucide:music-4'
  | 'lucide:music'
  | 'lucide:navigation-2-off'
  | 'lucide:navigation-2'
  | 'lucide:navigation-off'
  | 'lucide:navigation'
  | 'lucide:network'
  | 'lucide:newspaper'
  | 'lucide:nfc'
  | 'lucide:non-binary'
  | 'lucide:notebook-pen'
  | 'lucide:notebook-tabs'
  | 'lucide:notebook-text'
  | 'lucide:notebook'
  | 'lucide:notepad-text-dashed'
  | 'lucide:notepad-text'
  | 'lucide:nut-off'
  | 'lucide:nut'
  | 'lucide:octagon-alert'
  | 'lucide:octagon-minus'
  | 'lucide:octagon-pause'
  | 'lucide:octagon-x'
  | 'lucide:octagon'
  | 'lucide:omega'
  | 'lucide:option'
  | 'lucide:orbit'
  | 'lucide:origami'
  | 'lucide:package-2'
  | 'lucide:package-check'
  | 'lucide:package-minus'
  | 'lucide:package-open'
  | 'lucide:package-plus'
  | 'lucide:package-search'
  | 'lucide:package-x'
  | 'lucide:package'
  | 'lucide:paint-bucket'
  | 'lucide:paint-roller'
  | 'lucide:paintbrush-vertical'
  | 'lucide:paintbrush'
  | 'lucide:palette'
  | 'lucide:panda'
  | 'lucide:panel-bottom-close'
  | 'lucide:panel-bottom-dashed'
  | 'lucide:panel-bottom-open'
  | 'lucide:panel-bottom'
  | 'lucide:panel-left-close'
  | 'lucide:panel-left-dashed'
  | 'lucide:panel-left-open'
  | 'lucide:panel-left'
  | 'lucide:panel-right-close'
  | 'lucide:panel-right-dashed'
  | 'lucide:panel-right-open'
  | 'lucide:panel-right'
  | 'lucide:panel-top-close'
  | 'lucide:panel-top-dashed'
  | 'lucide:panel-top-open'
  | 'lucide:panel-top'
  | 'lucide:panels-left-bottom'
  | 'lucide:panels-right-bottom'
  | 'lucide:panels-top-left'
  | 'lucide:paperclip'
  | 'lucide:parentheses'
  | 'lucide:parking-meter'
  | 'lucide:party-popper'
  | 'lucide:pause'
  | 'lucide:paw-print'
  | 'lucide:pc-case'
  | 'lucide:pen-line'
  | 'lucide:pen-off'
  | 'lucide:pen-tool'
  | 'lucide:pen'
  | 'lucide:pencil-line'
  | 'lucide:pencil-off'
  | 'lucide:pencil-ruler'
  | 'lucide:pencil'
  | 'lucide:pentagon'
  | 'lucide:percent'
  | 'lucide:person-standing'
  | 'lucide:philippine-peso'
  | 'lucide:phone-call'
  | 'lucide:phone-forwarded'
  | 'lucide:phone-incoming'
  | 'lucide:phone-missed'
  | 'lucide:phone-off'
  | 'lucide:phone-outgoing'
  | 'lucide:phone'
  | 'lucide:pi'
  | 'lucide:piano'
  | 'lucide:pickaxe'
  | 'lucide:picture-in-picture-2'
  | 'lucide:picture-in-picture'
  | 'lucide:piggy-bank'
  | 'lucide:pilcrow-left'
  | 'lucide:pilcrow-right'
  | 'lucide:pilcrow'
  | 'lucide:pill-bottle'
  | 'lucide:pill'
  | 'lucide:pin-off'
  | 'lucide:pin'
  | 'lucide:pipette'
  | 'lucide:pizza'
  | 'lucide:plane-landing'
  | 'lucide:plane-takeoff'
  | 'lucide:plane'
  | 'lucide:play'
  | 'lucide:plug-2'
  | 'lucide:plug-zap'
  | 'lucide:plug'
  | 'lucide:plus'
  | 'lucide:pocket-knife'
  | 'lucide:pocket'
  | 'lucide:podcast'
  | 'lucide:pointer-off'
  | 'lucide:pointer'
  | 'lucide:popcorn'
  | 'lucide:popsicle'
  | 'lucide:pound-sterling'
  | 'lucide:power-off'
  | 'lucide:power'
  | 'lucide:presentation'
  | 'lucide:printer-check'
  | 'lucide:printer'
  | 'lucide:projector'
  | 'lucide:proportions'
  | 'lucide:puzzle'
  | 'lucide:pyramid'
  | 'lucide:qr-code'
  | 'lucide:quote'
  | 'lucide:rabbit'
  | 'lucide:radar'
  | 'lucide:radiation'
  | 'lucide:radical'
  | 'lucide:radio-receiver'
  | 'lucide:radio-tower'
  | 'lucide:radio'
  | 'lucide:radius'
  | 'lucide:rail-symbol'
  | 'lucide:rainbow'
  | 'lucide:rat'
  | 'lucide:ratio'
  | 'lucide:receipt-cent'
  | 'lucide:receipt-euro'
  | 'lucide:receipt-indian-rupee'
  | 'lucide:receipt-japanese-yen'
  | 'lucide:receipt-pound-sterling'
  | 'lucide:receipt-russian-ruble'
  | 'lucide:receipt-swiss-franc'
  | 'lucide:receipt-text'
  | 'lucide:receipt'
  | 'lucide:rectangle-ellipsis'
  | 'lucide:rectangle-goggles'
  | 'lucide:rectangle-horizontal'
  | 'lucide:rectangle-vertical'
  | 'lucide:recycle'
  | 'lucide:redo-2'
  | 'lucide:redo-dot'
  | 'lucide:redo'
  | 'lucide:refresh-ccw-dot'
  | 'lucide:refresh-ccw'
  | 'lucide:refresh-cw-off'
  | 'lucide:refresh-cw'
  | 'lucide:refrigerator'
  | 'lucide:regex'
  | 'lucide:remove-formatting'
  | 'lucide:repeat-1'
  | 'lucide:repeat-2'
  | 'lucide:repeat'
  | 'lucide:replace-all'
  | 'lucide:replace'
  | 'lucide:reply-all'
  | 'lucide:reply'
  | 'lucide:rewind'
  | 'lucide:ribbon'
  | 'lucide:rocket'
  | 'lucide:rocking-chair'
  | 'lucide:roller-coaster'
  | 'lucide:rotate-3d'
  | 'lucide:rotate-ccw-key'
  | 'lucide:rotate-ccw-square'
  | 'lucide:rotate-ccw'
  | 'lucide:rotate-cw-square'
  | 'lucide:rotate-cw'
  | 'lucide:route-off'
  | 'lucide:route'
  | 'lucide:router'
  | 'lucide:rows-2'
  | 'lucide:rows-3'
  | 'lucide:rows-4'
  | 'lucide:rss'
  | 'lucide:ruler-dimension-line'
  | 'lucide:ruler'
  | 'lucide:russian-ruble'
  | 'lucide:sailboat'
  | 'lucide:salad'
  | 'lucide:sandwich'
  | 'lucide:satellite-dish'
  | 'lucide:satellite'
  | 'lucide:saudi-riyal'
  | 'lucide:save-all'
  | 'lucide:save-off'
  | 'lucide:save'
  | 'lucide:scale-3d'
  | 'lucide:scale'
  | 'lucide:scaling'
  | 'lucide:scan-barcode'
  | 'lucide:scan-eye'
  | 'lucide:scan-face'
  | 'lucide:scan-heart'
  | 'lucide:scan-line'
  | 'lucide:scan-qr-code'
  | 'lucide:scan-search'
  | 'lucide:scan-text'
  | 'lucide:scan'
  | 'lucide:school'
  | 'lucide:scissors-line-dashed'
  | 'lucide:scissors'
  | 'lucide:screen-share-off'
  | 'lucide:screen-share'
  | 'lucide:scroll-text'
  | 'lucide:scroll'
  | 'lucide:search-check'
  | 'lucide:search-code'
  | 'lucide:search-slash'
  | 'lucide:search-x'
  | 'lucide:search'
  | 'lucide:section'
  | 'lucide:send-horizontal'
  | 'lucide:send-to-back'
  | 'lucide:send'
  | 'lucide:separator-horizontal'
  | 'lucide:separator-vertical'
  | 'lucide:server-cog'
  | 'lucide:server-crash'
  | 'lucide:server-off'
  | 'lucide:server'
  | 'lucide:settings-2'
  | 'lucide:settings'
  | 'lucide:shapes'
  | 'lucide:share-2'
  | 'lucide:share'
  | 'lucide:sheet'
  | 'lucide:shell'
  | 'lucide:shield-alert'
  | 'lucide:shield-ban'
  | 'lucide:shield-check'
  | 'lucide:shield-ellipsis'
  | 'lucide:shield-half'
  | 'lucide:shield-minus'
  | 'lucide:shield-off'
  | 'lucide:shield-plus'
  | 'lucide:shield-question'
  | 'lucide:shield-user'
  | 'lucide:shield-x'
  | 'lucide:shield'
  | 'lucide:ship-wheel'
  | 'lucide:ship'
  | 'lucide:shirt'
  | 'lucide:shopping-bag'
  | 'lucide:shopping-basket'
  | 'lucide:shopping-cart'
  | 'lucide:shovel'
  | 'lucide:shower-head'
  | 'lucide:shredder'
  | 'lucide:shrimp'
  | 'lucide:shrink'
  | 'lucide:shrub'
  | 'lucide:shuffle'
  | 'lucide:sigma'
  | 'lucide:signal-high'
  | 'lucide:signal-low'
  | 'lucide:signal-medium'
  | 'lucide:signal-zero'
  | 'lucide:signal'
  | 'lucide:signature'
  | 'lucide:signpost-big'
  | 'lucide:signpost'
  | 'lucide:siren'
  | 'lucide:skip-back'
  | 'lucide:skip-forward'
  | 'lucide:skull'
  | 'lucide:slack'
  | 'lucide:slash'
  | 'lucide:slice'
  | 'lucide:sliders-horizontal'
  | 'lucide:sliders-vertical'
  | 'lucide:smartphone-charging'
  | 'lucide:smartphone-nfc'
  | 'lucide:smartphone'
  | 'lucide:smile-plus'
  | 'lucide:smile'
  | 'lucide:snail'
  | 'lucide:snowflake'
  | 'lucide:soap-dispenser-droplet'
  | 'lucide:sofa'
  | 'lucide:soup'
  | 'lucide:space'
  | 'lucide:spade'
  | 'lucide:sparkle'
  | 'lucide:sparkles'
  | 'lucide:speaker'
  | 'lucide:speech'
  | 'lucide:spell-check-2'
  | 'lucide:spell-check'
  | 'lucide:spline-pointer'
  | 'lucide:spline'
  | 'lucide:split'
  | 'lucide:spray-can'
  | 'lucide:sprout'
  | 'lucide:square-activity'
  | 'lucide:square-arrow-down-left'
  | 'lucide:square-arrow-down-right'
  | 'lucide:square-arrow-down'
  | 'lucide:square-arrow-left'
  | 'lucide:square-arrow-out-down-left'
  | 'lucide:square-arrow-out-down-right'
  | 'lucide:square-arrow-out-up-left'
  | 'lucide:square-arrow-out-up-right'
  | 'lucide:square-arrow-right'
  | 'lucide:square-arrow-up-left'
  | 'lucide:square-arrow-up-right'
  | 'lucide:square-arrow-up'
  | 'lucide:square-asterisk'
  | 'lucide:square-bottom-dashed-scissors'
  | 'lucide:square-chart-gantt'
  | 'lucide:square-check-big'
  | 'lucide:square-check'
  | 'lucide:square-chevron-down'
  | 'lucide:square-chevron-left'
  | 'lucide:square-chevron-right'
  | 'lucide:square-chevron-up'
  | 'lucide:square-code'
  | 'lucide:square-dashed-bottom-code'
  | 'lucide:square-dashed-bottom'
  | 'lucide:square-dashed-kanban'
  | 'lucide:square-dashed-mouse-pointer'
  | 'lucide:square-dashed-top-solid'
  | 'lucide:square-dashed'
  | 'lucide:square-divide'
  | 'lucide:square-dot'
  | 'lucide:square-equal'
  | 'lucide:square-function'
  | 'lucide:square-kanban'
  | 'lucide:square-library'
  | 'lucide:square-m'
  | 'lucide:square-menu'
  | 'lucide:square-minus'
  | 'lucide:square-mouse-pointer'
  | 'lucide:square-parking-off'
  | 'lucide:square-parking'
  | 'lucide:square-pen'
  | 'lucide:square-percent'
  | 'lucide:square-pi'
  | 'lucide:square-pilcrow'
  | 'lucide:square-play'
  | 'lucide:square-plus'
  | 'lucide:square-power'
  | 'lucide:square-radical'
  | 'lucide:square-round-corner'
  | 'lucide:square-scissors'
  | 'lucide:square-sigma'
  | 'lucide:square-slash'
  | 'lucide:square-split-horizontal'
  | 'lucide:square-split-vertical'
  | 'lucide:square-square'
  | 'lucide:square-stack'
  | 'lucide:square-terminal'
  | 'lucide:square-user-round'
  | 'lucide:square-user'
  | 'lucide:square-x'
  | 'lucide:square'
  | 'lucide:squares-exclude'
  | 'lucide:squares-intersect'
  | 'lucide:squares-subtract'
  | 'lucide:squares-unite'
  | 'lucide:squircle'
  | 'lucide:squirrel'
  | 'lucide:stamp'
  | 'lucide:star-half'
  | 'lucide:star-off'
  | 'lucide:star'
  | 'lucide:step-back'
  | 'lucide:step-forward'
  | 'lucide:stethoscope'
  | 'lucide:sticker'
  | 'lucide:sticky-note'
  | 'lucide:store'
  | 'lucide:stretch-horizontal'
  | 'lucide:stretch-vertical'
  | 'lucide:strikethrough'
  | 'lucide:subscript'
  | 'lucide:sun-dim'
  | 'lucide:sun-medium'
  | 'lucide:sun-moon'
  | 'lucide:sun-snow'
  | 'lucide:sun'
  | 'lucide:sunrise'
  | 'lucide:sunset'
  | 'lucide:superscript'
  | 'lucide:swatch-book'
  | 'lucide:swiss-franc'
  | 'lucide:switch-camera'
  | 'lucide:sword'
  | 'lucide:swords'
  | 'lucide:syringe'
  | 'lucide:table-2'
  | 'lucide:table-cells-merge'
  | 'lucide:table-cells-split'
  | 'lucide:table-columns-split'
  | 'lucide:table-of-contents'
  | 'lucide:table-properties'
  | 'lucide:table-rows-split'
  | 'lucide:table'
  | 'lucide:tablet-smartphone'
  | 'lucide:tablet'
  | 'lucide:tablets'
  | 'lucide:tag'
  | 'lucide:tags'
  | 'lucide:tally-1'
  | 'lucide:tally-2'
  | 'lucide:tally-3'
  | 'lucide:tally-4'
  | 'lucide:tally-5'
  | 'lucide:tangent'
  | 'lucide:target'
  | 'lucide:telescope'
  | 'lucide:tent-tree'
  | 'lucide:tent'
  | 'lucide:terminal'
  | 'lucide:test-tube-diagonal'
  | 'lucide:test-tube'
  | 'lucide:test-tubes'
  | 'lucide:text-cursor-input'
  | 'lucide:text-cursor'
  | 'lucide:text-quote'
  | 'lucide:text-search'
  | 'lucide:text-select'
  | 'lucide:text'
  | 'lucide:theater'
  | 'lucide:thermometer-snowflake'
  | 'lucide:thermometer-sun'
  | 'lucide:thermometer'
  | 'lucide:thumbs-down'
  | 'lucide:thumbs-up'
  | 'lucide:ticket-check'
  | 'lucide:ticket-minus'
  | 'lucide:ticket-percent'
  | 'lucide:ticket-plus'
  | 'lucide:ticket-slash'
  | 'lucide:ticket-x'
  | 'lucide:ticket'
  | 'lucide:tickets-plane'
  | 'lucide:tickets'
  | 'lucide:timer-off'
  | 'lucide:timer-reset'
  | 'lucide:timer'
  | 'lucide:toggle-left'
  | 'lucide:toggle-right'
  | 'lucide:toilet'
  | 'lucide:tornado'
  | 'lucide:torus'
  | 'lucide:touchpad-off'
  | 'lucide:touchpad'
  | 'lucide:tower-control'
  | 'lucide:toy-brick'
  | 'lucide:tractor'
  | 'lucide:traffic-cone'
  | 'lucide:train-front-tunnel'
  | 'lucide:train-front'
  | 'lucide:train-track'
  | 'lucide:tram-front'
  | 'lucide:transgender'
  | 'lucide:trash-2'
  | 'lucide:trash'
  | 'lucide:tree-deciduous'
  | 'lucide:tree-palm'
  | 'lucide:tree-pine'
  | 'lucide:trees'
  | 'lucide:trello'
  | 'lucide:trending-down'
  | 'lucide:trending-up-down'
  | 'lucide:trending-up'
  | 'lucide:triangle-alert'
  | 'lucide:triangle-dashed'
  | 'lucide:triangle-right'
  | 'lucide:triangle'
  | 'lucide:trophy'
  | 'lucide:truck-electric'
  | 'lucide:truck'
  | 'lucide:turtle'
  | 'lucide:tv-minimal-play'
  | 'lucide:tv-minimal'
  | 'lucide:tv'
  | 'lucide:twitch'
  | 'lucide:twitter'
  | 'lucide:type-outline'
  | 'lucide:type'
  | 'lucide:umbrella-off'
  | 'lucide:umbrella'
  | 'lucide:underline'
  | 'lucide:undo-2'
  | 'lucide:undo-dot'
  | 'lucide:undo'
  | 'lucide:unfold-horizontal'
  | 'lucide:unfold-vertical'
  | 'lucide:ungroup'
  | 'lucide:university'
  | 'lucide:unlink-2'
  | 'lucide:unlink'
  | 'lucide:unplug'
  | 'lucide:upload'
  | 'lucide:usb'
  | 'lucide:user-check'
  | 'lucide:user-cog'
  | 'lucide:user-lock'
  | 'lucide:user-minus'
  | 'lucide:user-pen'
  | 'lucide:user-plus'
  | 'lucide:user-round-check'
  | 'lucide:user-round-cog'
  | 'lucide:user-round-minus'
  | 'lucide:user-round-pen'
  | 'lucide:user-round-plus'
  | 'lucide:user-round-search'
  | 'lucide:user-round-x'
  | 'lucide:user-round'
  | 'lucide:user-search'
  | 'lucide:user-x'
  | 'lucide:user'
  | 'lucide:users-round'
  | 'lucide:users'
  | 'lucide:utensils-crossed'
  | 'lucide:utensils'
  | 'lucide:utility-pole'
  | 'lucide:variable'
  | 'lucide:vault'
  | 'lucide:vegan'
  | 'lucide:venetian-mask'
  | 'lucide:venus-and-mars'
  | 'lucide:venus'
  | 'lucide:vibrate-off'
  | 'lucide:vibrate'
  | 'lucide:video-off'
  | 'lucide:video'
  | 'lucide:videotape'
  | 'lucide:view'
  | 'lucide:voicemail'
  | 'lucide:volleyball'
  | 'lucide:volume-1'
  | 'lucide:volume-2'
  | 'lucide:volume-off'
  | 'lucide:volume-x'
  | 'lucide:volume'
  | 'lucide:vote'
  | 'lucide:wallet-cards'
  | 'lucide:wallet-minimal'
  | 'lucide:wallet'
  | 'lucide:wallpaper'
  | 'lucide:wand-sparkles'
  | 'lucide:wand'
  | 'lucide:warehouse'
  | 'lucide:washing-machine'
  | 'lucide:watch'
  | 'lucide:waves-ladder'
  | 'lucide:waves'
  | 'lucide:waypoints'
  | 'lucide:webcam'
  | 'lucide:webhook-off'
  | 'lucide:webhook'
  | 'lucide:weight'
  | 'lucide:wheat-off'
  | 'lucide:wheat'
  | 'lucide:whole-word'
  | 'lucide:wifi-high'
  | 'lucide:wifi-low'
  | 'lucide:wifi-off'
  | 'lucide:wifi-pen'
  | 'lucide:wifi-zero'
  | 'lucide:wifi'
  | 'lucide:wind-arrow-down'
  | 'lucide:wind'
  | 'lucide:wine-off'
  | 'lucide:wine'
  | 'lucide:workflow'
  | 'lucide:worm'
  | 'lucide:wrap-text'
  | 'lucide:wrench'
  | 'lucide:x'
  | 'lucide:youtube'
  | 'lucide:zap-off'
  | 'lucide:zap'
  | 'lucide:zoom-in'
  | 'lucide:zoom-out';
/**
 * Click the button to generate the power points
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolarPanelPowerPoints".
 */
export type SolarPanelPowerPoints =
  | {
      pmax?: number | null;
      efficiency?: number | null;
      vmp: number;
      imp: number;
      voc: number;
      isc: number;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductVariants".
 */
export type ProductVariants = {
  sku: string;
  gallery?: (string | Image)[] | null;
  options?:
    | {
        label: string;
        value: string;
        type: 'text' | 'color';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
}[];
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MenuItems".
 */
export type MenuItems =
  | {
      text: string;
      type: 'mega' | 'link';
      link?: LinkType;
      megaItems?: MegaMenuItems;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MegaMenuItems".
 */
export type MegaMenuItems =
  | {
      type?: ('links' | 'banner') | null;
      linksSection?: {
        title?: string | null;
        items?: LinkItems;
        isExtended?: boolean | null;
      };
      banner?: {
        title: string;
        description?: string | null;
        media?:
          | ({
              relationTo: 'images';
              value: string | Image;
            } | null)
          | ({
              relationTo: 'videos';
              value: string | Video;
            } | null);
        link?: LinkType;
      };
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkItems".
 */
export type LinkItems =
  | {
      icon?: IconName;
      title: string;
      description?: string | null;
      link?: LinkType;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    faqs: Faq;
    pages: Page;
    industries: Industry;
    notifications: Notification;
    inquiries: Inquiry;
    'newsletter-subscribers': NewsletterSubscriber;
    images: Image;
    videos: Video;
    models: Model;
    documents: Document;
    attachments: Attachment;
    warranties: Warranty;
    instructions: Instruction;
    certifications: Certification;
    'packaging-configs': PackagingConfig;
    datasheets: Datasheet;
    drawings: Drawing;
    testimonials: Testimonial;
    posts: Post;
    'solar-panels': SolarPanel;
    'pump-controllers': PumpController;
    'solar-panel-categories': SolarPanelCategory;
    'pump-controller-categories': PumpControllerCategory;
    exports: Export;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    industries: IndustriesSelect<false> | IndustriesSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    inquiries: InquiriesSelect<false> | InquiriesSelect<true>;
    'newsletter-subscribers': NewsletterSubscribersSelect<false> | NewsletterSubscribersSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    models: ModelsSelect<false> | ModelsSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    attachments: AttachmentsSelect<false> | AttachmentsSelect<true>;
    warranties: WarrantiesSelect<false> | WarrantiesSelect<true>;
    instructions: InstructionsSelect<false> | InstructionsSelect<true>;
    certifications: CertificationsSelect<false> | CertificationsSelect<true>;
    'packaging-configs': PackagingConfigsSelect<false> | PackagingConfigsSelect<true>;
    datasheets: DatasheetsSelect<false> | DatasheetsSelect<true>;
    drawings: DrawingsSelect<false> | DrawingsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'solar-panels': SolarPanelsSelect<false> | SolarPanelsSelect<true>;
    'pump-controllers': PumpControllersSelect<false> | PumpControllersSelect<true>;
    'solar-panel-categories': SolarPanelCategoriesSelect<false> | SolarPanelCategoriesSelect<true>;
    'pump-controller-categories': PumpControllerCategoriesSelect<false> | PumpControllerCategoriesSelect<true>;
    exports: ExportsSelect<false> | ExportsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    footer: Footer;
    'company-info': CompanyInfo;
    'contact-info': ContactInfo;
    'social-links': SocialLink;
    header: Header;
  };
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>;
    'company-info': CompanyInfoSelect<false> | CompanyInfoSelect<true>;
    'contact-info': ContactInfoSelect<false> | ContactInfoSelect<true>;
    'social-links': SocialLinksSelect<false> | SocialLinksSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
  };
  locale: 'en' | 'de';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      'send-newsletter-confirmation-email': TaskSendNewsletterConfirmationEmail;
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles: ('admin' | 'editor' | 'customer')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: string;
  type: 'general' | 'solar-panel' | 'pump-controller';
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  layout: (
    | HeroBlockType
    | ContentBlockType
    | CallToActionBlockType
    | MediaBlockType
    | FeaturesBlockType
    | TimelineBlockType
    | FAQBlockType
  )[];
  publishedAt?: string | null;
  showLastUpdated?: boolean | null;
  slug: string;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlockType".
 */
export interface HeroBlockType {
  /**
   * A short, optional heading above the main title.
   */
  eyebrow?: string | null;
  /**
   * Main heading for the block.
   */
  title: string;
  /**
   * Secondary heading under the main title.
   */
  subtitle?: string | null;
  /**
   * Longer body text or paragraph content.
   */
  desc?: string | null;
  ctaPrimary?: LinkType;
  ctaSecondary?: LinkType;
  /**
   * Select an image or video to display in the hero section.
   */
  media:
    | {
        relationTo: 'images';
        value: string | Image;
      }
    | {
        relationTo: 'videos';
        value: string | Video;
      };
  /**
   * Select if text is on the left or the right.
   */
  textPlacement?: ('left' | 'right') | null;
  /**
   * Align text within its column (left, center, or right).
   */
  textAlignment?: ('start' | 'center' | 'end') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkType".
 */
export interface LinkType {
  type?: ('internal' | 'external' | 'relative') | null;
  internal?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'industries';
        value: string | Industry;
      } | null)
    | ({
        relationTo: 'solar-panels';
        value: string | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: string | PumpController;
      } | null)
    | ({
        relationTo: 'solar-panel-categories';
        value: string | SolarPanelCategory;
      } | null)
    | ({
        relationTo: 'pump-controller-categories';
        value: string | PumpControllerCategory;
      } | null);
  relative?: string | null;
  external?: string | null;
  label?: string | null;
  /**
   * Choose how the link should be rendered.
   */
  appearance?: ('default' | 'outline') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries".
 */
export interface Industry {
  id: string;
  title: string;
  description?: string | null;
  /**
   * The cover image for the industry
   */
  coverImage?: (string | null) | Image;
  slug: string;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  alt: string;
  blurDataUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panels".
 */
export interface SolarPanel {
  id: string;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  visible?: boolean | null;
  industry: string | Industry;
  productCategory: string | SolarPanelCategory;
  excerpt: string;
  /**
   * Will be used as the hero image on the product page
   */
  heroImage?: (string | null) | Image;
  /**
   * Auto generated from gallery images, if no gallery images are present, the first image in the variants will be used as cover image
   */
  coverImage: string | Image;
  three?: {
    enabled?: boolean | null;
    /**
     * Upload a 3D model file
     */
    model?: (string | null) | Model;
  };
  modelName?: string | null;
  /**
   * Comprehensive description of the product
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Showcased features of the product, min. 2, max. 6
   */
  features?: FeatureBlockType[] | null;
  /**
   * Upload images for the product
   */
  gallery?: (string | Image)[] | null;
  dimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  weight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  cellDesc: string;
  cellLength: number;
  cellWidth: number;
  cellCount: number;
  glassType: 'monofacial' | 'bifacial';
  bifaciality?: number | null;
  glassDesc: string;
  frameDesc: string;
  junctionDesc: string;
  connDesc: string;
  connLength: number;
  /**
   * Enter the workingtemperature range of the panel / cell
   */
  temp: {
    min: number;
    max: number;
  };
  snow: number;
  wind: number;
  hail: number;
  tolerance?: {
    min?: number | null;
    max?: number | null;
  };
  power: {
    min: number;
    max: number;
    /**
     * Step must be a multiple of 5
     */
    step: number;
    points?: SolarPanelPowerPoints;
  };
  tempCo: {
    pmax: number;
    isc: number;
    voc: number;
    noct: number;
  };
  ratings: {
    fuse: number;
    voltage: string;
    fire: string;
  };
  variants: ProductVariants;
  drawing?: (string | null) | Drawing;
  /**
   * Select the warranty for the product
   */
  warranty?: (string | null) | Warranty;
  datasheet?: (string | null) | Datasheet;
  certifications?: (string | Certification)[] | null;
  instructions?: (string | Instruction)[] | null;
  /**
   * OEM description
   */
  oem?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  moq?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Specify lead times for different quantity ranges
   */
  leadTime?:
    | {
        /**
         * Lower bound of the range. Leave empty for no lower limit.
         */
        min?: {
          value?: number | null;
          unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
        };
        /**
         * Upper bound of the range. Leave empty for no upper limit.
         */
        max?: {
          value?: number | null;
          unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
        };
        duration?: {
          value?: number | null;
          unit?: ('days' | 'weeks' | 'months' | 'years') | null;
        };
        id?: string | null;
      }[]
    | null;
  packagingConfig?: (string | null) | PackagingConfig;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panel-categories".
 */
export interface SolarPanelCategory {
  id: string;
  title?: ('topcon' | 'perc' | 'hjt') | null;
  slug: string;
  slugLock?: boolean | null;
  description?: string | null;
  /**
   * The hero image will be displayed on the product category page
   */
  heroImage?: (string | null) | Image;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models".
 */
export interface Model {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlockType".
 */
export interface FeatureBlockType {
  type: 'text' | 'number';
  title?: string | null;
  number?: number | null;
  description?: string | null;
  icon: IconName;
  /**
   * Delay in seconds before the feature content starts to animate
   */
  delay?: number | null;
  /**
   * If checked, the number will be appended with a plus sign
   */
  withPlus?: boolean | null;
  /**
   * If checked, the number will be displayed as a percentage
   */
  isPercentage?: boolean | null;
  /**
   * Ticker will start from this value
   */
  startValue?: number | null;
  /**
   * Number of decimal places to display
   */
  decimalPlaces?: number | null;
  /**
   * Direction of the number ticker
   */
  direction?: ('up' | 'down') | null;
  /**
   * Alignment of the icon and content
   */
  alignment?: ('default' | 'reverse' | 'between' | 'between-reverse' | 'center') | null;
  /**
   * Opacity of the background
   */
  opacity?: number | null;
  /**
   * If checked, the icon will have a background
   */
  iconBackground?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drawings".
 */
export interface Drawing {
  id: string;
  title: string;
  description?: string | null;
  file: string | Image;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warranties".
 */
export interface Warranty {
  id: string;
  title: string;
  productWarranty?: boolean | null;
  descProduct?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  durationProduct?: {
    value?: number | null;
    unit?: ('days' | 'weeks' | 'months' | 'years') | null;
  };
  powerWarranty?: boolean | null;
  descPower?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  durationPower?: {
    value?: number | null;
    unit?: ('days' | 'weeks' | 'months' | 'years') | null;
  };
  powerDegradation?: {
    initialGuarantee: number;
    annual: number;
    endYearGuarantee: number;
    compareWithIndustry?: boolean | null;
    industryStd?: {
      initialValue?: number | null;
      annualDegradation?: number | null;
      endYearValue?: number | null;
    };
  };
  /**
   * File of the warranty
   */
  file?: (string | null) | Document;
  fileDesc?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasheets".
 */
export interface Datasheet {
  id: string;
  title: string;
  desc?: string | null;
  /**
   * Upload a PDF file for the datasheet
   */
  file?: (string | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications".
 */
export interface Certification {
  id: string;
  name: string;
  desc?: string | null;
  /**
   * The logo of the certification
   */
  logo: string | Image;
  file?: (string | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructions".
 */
export interface Instruction {
  id: string;
  title: string;
  description?: string | null;
  /**
   * Upload a PDF file for the instructions
   */
  file?: (string | null) | Document;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "packaging-configs".
 */
export interface PackagingConfig {
  id: string;
  title: string;
  /**
   * Description of the packaging configuration
   */
  description?: string | null;
  /**
   * How the product is packaged individually (e.g., pieces, sets)
   */
  unitQty?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Dimensions of a single package
   */
  unitDimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  /**
   * Weight of a single packaged unit
   */
  unitWeight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  /**
   * Number of pieces that can fit on one pallet
   */
  qtyPerPallet?: number | null;
  /**
   * Dimensions of a fully loaded pallet
   */
  palletDimensions?: {
    h?: number | null;
    w?: number | null;
    d?: number | null;
    unit?: ('mm' | 'cm' | 'm') | null;
  };
  /**
   * Total weight of a fully loaded pallet (including pallet weight)
   */
  palletWeight?: {
    value?: number | null;
    unit?: ('g' | 'kg') | null;
  };
  /**
   * Standard shipping container type
   */
  containerType?: ('20GP' | '40GP' | '40HQ') | null;
  /**
   * Number of pallets that can fit in the container
   */
  pltsPerContainer?: number | null;
  /**
   * Total number of pieces in the container (Pallets × Units per Pallet)
   */
  totalQty?: number | null;
  /**
   * Total weight of all pallets in the container (kg)
   */
  totalWeight?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controllers".
 */
export interface PumpController {
  id: string;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  visible?: boolean | null;
  industry: string | Industry;
  productCategory: string | PumpControllerCategory;
  excerpt: string;
  /**
   * Will be used as the hero image on the product page
   */
  heroImage?: (string | null) | Image;
  /**
   * Auto generated from gallery images, if no gallery images are present, the first image in the variants will be used as cover image
   */
  coverImage: string | Image;
  three?: {
    enabled?: boolean | null;
    /**
     * Upload a 3D model file
     */
    model?: (string | null) | Model;
  };
  category: 'smart' | 'standard';
  modelName?: string | null;
  /**
   * Comprehensive description of the product
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Showcased features of the product, min. 2, max. 6
   */
  features?: FeatureBlockType[] | null;
  /**
   * Upload images for the product
   */
  gallery?: (string | Image)[] | null;
  wideAmplitudeVoltage: {
    min: number;
    max: number;
  };
  maxCurrent: number;
  maxPower: number;
  startingPressureRange: {
    min: number;
    max: number;
  };
  maxPressure: number;
  tempRange: {
    min: number;
    max: number;
  };
  frequencyRange: {
    min: number;
    max: number;
  };
  protectionGrade: string;
  threadInterface?: string | null;
  maxWorkingPressure: number;
  variants: ProductVariants;
  drawing?: (string | null) | Drawing;
  /**
   * Select the warranty for the product
   */
  warranty?: (string | null) | Warranty;
  datasheet?: (string | null) | Datasheet;
  certifications?: (string | Certification)[] | null;
  instructions?: (string | Instruction)[] | null;
  /**
   * OEM description
   */
  oem?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  moq?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  /**
   * Specify lead times for different quantity ranges
   */
  leadTime?:
    | {
        /**
         * Lower bound of the range. Leave empty for no lower limit.
         */
        min?: {
          value?: number | null;
          unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
        };
        /**
         * Upper bound of the range. Leave empty for no upper limit.
         */
        max?: {
          value?: number | null;
          unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
        };
        duration?: {
          value?: number | null;
          unit?: ('days' | 'weeks' | 'months' | 'years') | null;
        };
        id?: string | null;
      }[]
    | null;
  packagingConfig?: (string | null) | PackagingConfig;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controller-categories".
 */
export interface PumpControllerCategory {
  id: string;
  title?: ('smart' | 'standard') | null;
  slug: string;
  slugLock?: boolean | null;
  description?: string | null;
  /**
   * The hero image will be displayed on the product category page
   */
  heroImage?: (string | null) | Image;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockType".
 */
export interface ContentBlockType {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: LinkType;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlockType".
 */
export interface CallToActionBlockType {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link?: LinkType;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'callToActionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockType".
 */
export interface MediaBlockType {
  /**
   * Select a media item to display
   */
  media:
    | {
        relationTo: 'images';
        value: string | Image;
      }
    | {
        relationTo: 'videos';
        value: string | Video;
      };
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlockType".
 */
export interface FeaturesBlockType {
  /**
   * Showcased features of the product, min. 2, max. 6
   */
  features?: FeatureBlockType[] | null;
  /**
   * Number of columns to display the features on desktop
   */
  columns?: ('2' | '3' | '1') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuresBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlockType".
 */
export interface TimelineBlockType {
  items?:
    | {
        title: string;
        icon?: IconName;
        date: string;
        datePrecision?: ('year' | 'month' | 'day') | null;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timelineBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlockType".
 */
export interface FAQBlockType {
  title?: string | null;
  description?: string | null;
  type: 'general' | 'solar-panel' | 'pump-controller';
  style: 'accordion' | 'card';
  content: (string | Faq)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  title: string;
  link?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'solar-panels';
        value: string | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: string | PumpController;
      } | null);
  state?: ('active' | 'inactive') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries".
 */
export interface Inquiry {
  id: string;
  /**
   * Inquiry status
   */
  status?: ('new' | 'replied' | 'following' | 'converted' | 'closed') | null;
  /**
   * Cloudflare Turnstile token used to verify the inquiry
   */
  token?: string | null;
  /**
   * Only for internal use, not displayed to customers
   */
  internalNotes?: string | null;
  /**
   * Date and time of the scheduled action
   */
  scheduledDate?: string | null;
  /**
   * Product inquiry related product
   */
  relatedProduct?:
    | ({
        relationTo: 'solar-panels';
        value: string | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: string | PumpController;
      } | null);
  name: string;
  email: string;
  phone: string;
  message: string;
  company?: string | null;
  position?: string | null;
  type?: ('wholesaler' | 'retailer' | 'manufacturer' | 'project-developer' | 'other') | null;
  country?:
    | (
        | 'AF'
        | 'AX'
        | 'AL'
        | 'DZ'
        | 'AS'
        | 'AD'
        | 'AO'
        | 'AI'
        | 'AQ'
        | 'AG'
        | 'AR'
        | 'AM'
        | 'AW'
        | 'AU'
        | 'AT'
        | 'AZ'
        | 'BS'
        | 'BH'
        | 'BD'
        | 'BB'
        | 'BY'
        | 'BE'
        | 'BZ'
        | 'BJ'
        | 'BM'
        | 'BT'
        | 'BO'
        | 'BA'
        | 'BW'
        | 'BV'
        | 'BR'
        | 'IO'
        | 'BN'
        | 'BG'
        | 'BF'
        | 'BI'
        | 'KH'
        | 'CM'
        | 'CA'
        | 'CV'
        | 'KY'
        | 'CF'
        | 'TD'
        | 'CL'
        | 'CN'
        | 'CX'
        | 'CC'
        | 'CO'
        | 'KM'
        | 'CG'
        | 'CD'
        | 'CK'
        | 'CR'
        | 'CI'
        | 'HR'
        | 'CU'
        | 'CY'
        | 'CZ'
        | 'DK'
        | 'DJ'
        | 'DM'
        | 'DO'
        | 'EC'
        | 'EG'
        | 'SV'
        | 'GQ'
        | 'ER'
        | 'EE'
        | 'ET'
        | 'FK'
        | 'FO'
        | 'FJ'
        | 'FI'
        | 'FR'
        | 'GF'
        | 'PF'
        | 'TF'
        | 'GA'
        | 'GM'
        | 'GE'
        | 'DE'
        | 'GH'
        | 'GI'
        | 'GR'
        | 'GL'
        | 'GD'
        | 'GP'
        | 'GU'
        | 'GT'
        | 'GG'
        | 'GN'
        | 'GW'
        | 'GY'
        | 'HT'
        | 'HM'
        | 'VA'
        | 'HN'
        | 'HK'
        | 'HU'
        | 'IS'
        | 'IN'
        | 'ID'
        | 'IR'
        | 'IQ'
        | 'IE'
        | 'IM'
        | 'IL'
        | 'IT'
        | 'JM'
        | 'JP'
        | 'JE'
        | 'JO'
        | 'KZ'
        | 'KE'
        | 'KI'
        | 'KP'
        | 'KR'
        | 'XK'
        | 'KW'
        | 'KG'
        | 'LA'
        | 'LV'
        | 'LB'
        | 'LS'
        | 'LR'
        | 'LY'
        | 'LI'
        | 'LT'
        | 'LU'
        | 'MO'
        | 'MK'
        | 'MG'
        | 'MW'
        | 'MY'
        | 'MV'
        | 'ML'
        | 'MT'
        | 'MH'
        | 'MQ'
        | 'MR'
        | 'MU'
        | 'YT'
        | 'MX'
        | 'FM'
        | 'MD'
        | 'MC'
        | 'MN'
        | 'ME'
        | 'MS'
        | 'MA'
        | 'MZ'
        | 'MM'
        | 'NA'
        | 'NR'
        | 'NP'
        | 'NL'
        | 'AN'
        | 'NC'
        | 'NZ'
        | 'NI'
        | 'NE'
        | 'NG'
        | 'NU'
        | 'NF'
        | 'MP'
        | 'NO'
        | 'OM'
        | 'PK'
        | 'PW'
        | 'PS'
        | 'PA'
        | 'PG'
        | 'PY'
        | 'PE'
        | 'PH'
        | 'PN'
        | 'PL'
        | 'PT'
        | 'PR'
        | 'QA'
        | 'RE'
        | 'RO'
        | 'RU'
        | 'RW'
        | 'SH'
        | 'KN'
        | 'LC'
        | 'PM'
        | 'VC'
        | 'WS'
        | 'SM'
        | 'ST'
        | 'SA'
        | 'SN'
        | 'RS'
        | 'SC'
        | 'SL'
        | 'SG'
        | 'SK'
        | 'SI'
        | 'SB'
        | 'SO'
        | 'ZA'
        | 'GS'
        | 'ES'
        | 'LK'
        | 'SD'
        | 'SR'
        | 'SJ'
        | 'SZ'
        | 'SE'
        | 'CH'
        | 'SY'
        | 'TW'
        | 'TJ'
        | 'TZ'
        | 'TH'
        | 'TL'
        | 'TG'
        | 'TK'
        | 'TO'
        | 'TT'
        | 'TN'
        | 'TR'
        | 'TM'
        | 'TC'
        | 'TV'
        | 'UG'
        | 'UA'
        | 'AE'
        | 'GB'
        | 'US'
        | 'UM'
        | 'UY'
        | 'UZ'
        | 'VU'
        | 'VE'
        | 'VN'
        | 'VG'
        | 'VI'
        | 'WF'
        | 'EH'
        | 'YE'
        | 'ZM'
        | 'ZW'
      )
    | null;
  website?: string | null;
  employees?: ('1-10' | '11-50' | '51-200' | '201-500' | '501-1000' | '1000+') | null;
  productType?: ('solar-panel' | 'pump-controller') | null;
  productName?: string | null;
  sku?: string | null;
  qty?: {
    value?: number | null;
    unit?: ('pcs' | 'sets' | 'plts' | 'ctns') | null;
  };
  frequency?: ('one-time' | 'monthly' | 'quarterly' | 'yearly') | null;
  destination?:
    | (
        | 'AF'
        | 'AX'
        | 'AL'
        | 'DZ'
        | 'AS'
        | 'AD'
        | 'AO'
        | 'AI'
        | 'AQ'
        | 'AG'
        | 'AR'
        | 'AM'
        | 'AW'
        | 'AU'
        | 'AT'
        | 'AZ'
        | 'BS'
        | 'BH'
        | 'BD'
        | 'BB'
        | 'BY'
        | 'BE'
        | 'BZ'
        | 'BJ'
        | 'BM'
        | 'BT'
        | 'BO'
        | 'BA'
        | 'BW'
        | 'BV'
        | 'BR'
        | 'IO'
        | 'BN'
        | 'BG'
        | 'BF'
        | 'BI'
        | 'KH'
        | 'CM'
        | 'CA'
        | 'CV'
        | 'KY'
        | 'CF'
        | 'TD'
        | 'CL'
        | 'CN'
        | 'CX'
        | 'CC'
        | 'CO'
        | 'KM'
        | 'CG'
        | 'CD'
        | 'CK'
        | 'CR'
        | 'CI'
        | 'HR'
        | 'CU'
        | 'CY'
        | 'CZ'
        | 'DK'
        | 'DJ'
        | 'DM'
        | 'DO'
        | 'EC'
        | 'EG'
        | 'SV'
        | 'GQ'
        | 'ER'
        | 'EE'
        | 'ET'
        | 'FK'
        | 'FO'
        | 'FJ'
        | 'FI'
        | 'FR'
        | 'GF'
        | 'PF'
        | 'TF'
        | 'GA'
        | 'GM'
        | 'GE'
        | 'DE'
        | 'GH'
        | 'GI'
        | 'GR'
        | 'GL'
        | 'GD'
        | 'GP'
        | 'GU'
        | 'GT'
        | 'GG'
        | 'GN'
        | 'GW'
        | 'GY'
        | 'HT'
        | 'HM'
        | 'VA'
        | 'HN'
        | 'HK'
        | 'HU'
        | 'IS'
        | 'IN'
        | 'ID'
        | 'IR'
        | 'IQ'
        | 'IE'
        | 'IM'
        | 'IL'
        | 'IT'
        | 'JM'
        | 'JP'
        | 'JE'
        | 'JO'
        | 'KZ'
        | 'KE'
        | 'KI'
        | 'KP'
        | 'KR'
        | 'XK'
        | 'KW'
        | 'KG'
        | 'LA'
        | 'LV'
        | 'LB'
        | 'LS'
        | 'LR'
        | 'LY'
        | 'LI'
        | 'LT'
        | 'LU'
        | 'MO'
        | 'MK'
        | 'MG'
        | 'MW'
        | 'MY'
        | 'MV'
        | 'ML'
        | 'MT'
        | 'MH'
        | 'MQ'
        | 'MR'
        | 'MU'
        | 'YT'
        | 'MX'
        | 'FM'
        | 'MD'
        | 'MC'
        | 'MN'
        | 'ME'
        | 'MS'
        | 'MA'
        | 'MZ'
        | 'MM'
        | 'NA'
        | 'NR'
        | 'NP'
        | 'NL'
        | 'AN'
        | 'NC'
        | 'NZ'
        | 'NI'
        | 'NE'
        | 'NG'
        | 'NU'
        | 'NF'
        | 'MP'
        | 'NO'
        | 'OM'
        | 'PK'
        | 'PW'
        | 'PS'
        | 'PA'
        | 'PG'
        | 'PY'
        | 'PE'
        | 'PH'
        | 'PN'
        | 'PL'
        | 'PT'
        | 'PR'
        | 'QA'
        | 'RE'
        | 'RO'
        | 'RU'
        | 'RW'
        | 'SH'
        | 'KN'
        | 'LC'
        | 'PM'
        | 'VC'
        | 'WS'
        | 'SM'
        | 'ST'
        | 'SA'
        | 'SN'
        | 'RS'
        | 'SC'
        | 'SL'
        | 'SG'
        | 'SK'
        | 'SI'
        | 'SB'
        | 'SO'
        | 'ZA'
        | 'GS'
        | 'ES'
        | 'LK'
        | 'SD'
        | 'SR'
        | 'SJ'
        | 'SZ'
        | 'SE'
        | 'CH'
        | 'SY'
        | 'TW'
        | 'TJ'
        | 'TZ'
        | 'TH'
        | 'TL'
        | 'TG'
        | 'TK'
        | 'TO'
        | 'TT'
        | 'TN'
        | 'TR'
        | 'TM'
        | 'TC'
        | 'TV'
        | 'UG'
        | 'UA'
        | 'AE'
        | 'GB'
        | 'US'
        | 'UM'
        | 'UY'
        | 'UZ'
        | 'VU'
        | 'VE'
        | 'VN'
        | 'VG'
        | 'VI'
        | 'WF'
        | 'EH'
        | 'YE'
        | 'ZM'
        | 'ZW'
      )
    | null;
  timeline?: ('immediate' | '1-month' | '3-months' | '6-months') | null;
  contactEmail?: boolean | null;
  contactPhone?: boolean | null;
  contactWhatsapp?: boolean | null;
  /**
   * Maximum 3 files
   */
  attachments?:
    | {
        file?: (string | null) | Attachment;
        id?: string | null;
      }[]
    | null;
  page?: string | null;
  ipAddress?: string | null;
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Customer uploaded files
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments".
 */
export interface Attachment {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Users who have subscribed to the newsletter
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers".
 */
export interface NewsletterSubscriber {
  id: string;
  /**
   * The subscriber's email address
   */
  email: string;
  /**
   * Subscription status
   */
  status?: ('subscribed' | 'unsubscribed') | null;
  /**
   * Token for unsubscribing
   */
  token?: string | null;
  metadata?: {
    /**
     * The page the subscriber subscribed from
     */
    page?: string | null;
    ipAddress?: string | null;
    userAgent?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: string;
  name: string;
  /**
   * The designation of the person giving the testimonial
   */
  designation?: string | null;
  quote: string;
  /**
   * The avatar of the person giving the testimonial
   */
  avatar?: (string | null) | Image;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  authors?: (string | User)[] | null;
  publishedAt?: string | null;
  tags?: string[] | null;
  coverImage: string | Image;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports".
 */
export interface Export {
  id: string;
  name?: string | null;
  format: 'csv' | 'json';
  limit?: number | null;
  sort?: string | null;
  locale?: ('all' | 'en' | 'de') | null;
  drafts?: ('yes' | 'no') | null;
  selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
  fields?: string[] | null;
  collectionSlug: string;
  where?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'send-newsletter-confirmation-email' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'send-newsletter-confirmation-email' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'faqs';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'industries';
        value: string | Industry;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'inquiries';
        value: string | Inquiry;
      } | null)
    | ({
        relationTo: 'newsletter-subscribers';
        value: string | NewsletterSubscriber;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'models';
        value: string | Model;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'attachments';
        value: string | Attachment;
      } | null)
    | ({
        relationTo: 'warranties';
        value: string | Warranty;
      } | null)
    | ({
        relationTo: 'instructions';
        value: string | Instruction;
      } | null)
    | ({
        relationTo: 'certifications';
        value: string | Certification;
      } | null)
    | ({
        relationTo: 'packaging-configs';
        value: string | PackagingConfig;
      } | null)
    | ({
        relationTo: 'datasheets';
        value: string | Datasheet;
      } | null)
    | ({
        relationTo: 'drawings';
        value: string | Drawing;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: string | Testimonial;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'solar-panels';
        value: string | SolarPanel;
      } | null)
    | ({
        relationTo: 'pump-controllers';
        value: string | PumpController;
      } | null)
    | ({
        relationTo: 'solar-panel-categories';
        value: string | SolarPanelCategory;
      } | null)
    | ({
        relationTo: 'pump-controller-categories';
        value: string | PumpControllerCategory;
      } | null)
    | ({
        relationTo: 'exports';
        value: string | Export;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  type?: T;
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        heroBlock?: T | HeroBlockTypeSelect<T>;
        contentBlock?: T | ContentBlockTypeSelect<T>;
        callToActionBlock?: T | CallToActionBlockTypeSelect<T>;
        mediaBlock?: T | MediaBlockTypeSelect<T>;
        featuresBlock?: T | FeaturesBlockTypeSelect<T>;
        timelineBlock?: T | TimelineBlockTypeSelect<T>;
        faqBlock?: T | FAQBlockTypeSelect<T>;
      };
  publishedAt?: T;
  showLastUpdated?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlockType_select".
 */
export interface HeroBlockTypeSelect<T extends boolean = true> {
  eyebrow?: T;
  title?: T;
  subtitle?: T;
  desc?: T;
  ctaPrimary?: T | LinkTypeSelect<T>;
  ctaSecondary?: T | LinkTypeSelect<T>;
  media?: T;
  textPlacement?: T;
  textAlignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkType_select".
 */
export interface LinkTypeSelect<T extends boolean = true> {
  type?: T;
  internal?: T;
  relative?: T;
  external?: T;
  label?: T;
  appearance?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockType_select".
 */
export interface ContentBlockTypeSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?: T | LinkTypeSelect<T>;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlockType_select".
 */
export interface CallToActionBlockTypeSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?: T | LinkTypeSelect<T>;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockType_select".
 */
export interface MediaBlockTypeSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlockType_select".
 */
export interface FeaturesBlockTypeSelect<T extends boolean = true> {
  features?:
    | T
    | {
        featureBlock?: T | FeatureBlockTypeSelect<T>;
      };
  columns?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlockType_select".
 */
export interface FeatureBlockTypeSelect<T extends boolean = true> {
  type?: T;
  title?: T;
  number?: T;
  description?: T;
  icon?: T;
  delay?: T;
  withPlus?: T;
  isPercentage?: T;
  startValue?: T;
  decimalPlaces?: T;
  direction?: T;
  alignment?: T;
  opacity?: T;
  iconBackground?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlockType_select".
 */
export interface TimelineBlockTypeSelect<T extends boolean = true> {
  items?:
    | T
    | {
        title?: T;
        icon?: T;
        date?: T;
        datePrecision?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlockType_select".
 */
export interface FAQBlockTypeSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  type?: T;
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries_select".
 */
export interface IndustriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  coverImage?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  state?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries_select".
 */
export interface InquiriesSelect<T extends boolean = true> {
  status?: T;
  token?: T;
  internalNotes?: T;
  scheduledDate?: T;
  relatedProduct?: T;
  name?: T;
  email?: T;
  phone?: T;
  message?: T;
  company?: T;
  position?: T;
  type?: T;
  country?: T;
  website?: T;
  employees?: T;
  productType?: T;
  productName?: T;
  sku?: T;
  qty?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  frequency?: T;
  destination?: T;
  timeline?: T;
  contactEmail?: T;
  contactPhone?: T;
  contactWhatsapp?: T;
  attachments?:
    | T
    | {
        file?: T;
        id?: T;
      };
  page?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers_select".
 */
export interface NewsletterSubscribersSelect<T extends boolean = true> {
  email?: T;
  status?: T;
  token?: T;
  metadata?:
    | T
    | {
        page?: T;
        ipAddress?: T;
        userAgent?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  alt?: T;
  blurDataUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models_select".
 */
export interface ModelsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments_select".
 */
export interface AttachmentsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "warranties_select".
 */
export interface WarrantiesSelect<T extends boolean = true> {
  title?: T;
  productWarranty?: T;
  descProduct?: T;
  durationProduct?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  powerWarranty?: T;
  descPower?: T;
  durationPower?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  powerDegradation?:
    | T
    | {
        initialGuarantee?: T;
        annual?: T;
        endYearGuarantee?: T;
        compareWithIndustry?: T;
        industryStd?:
          | T
          | {
              initialValue?: T;
              annualDegradation?: T;
              endYearValue?: T;
            };
      };
  file?: T;
  fileDesc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructions_select".
 */
export interface InstructionsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications_select".
 */
export interface CertificationsSelect<T extends boolean = true> {
  name?: T;
  desc?: T;
  logo?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "packaging-configs_select".
 */
export interface PackagingConfigsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  unitQty?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  unitDimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  unitWeight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  qtyPerPallet?: T;
  palletDimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  palletWeight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  containerType?: T;
  pltsPerContainer?: T;
  totalQty?: T;
  totalWeight?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "datasheets_select".
 */
export interface DatasheetsSelect<T extends boolean = true> {
  title?: T;
  desc?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drawings_select".
 */
export interface DrawingsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  designation?: T;
  quote?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  authors?: T;
  publishedAt?: T;
  tags?: T;
  coverImage?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panels_select".
 */
export interface SolarPanelsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  visible?: T;
  industry?: T;
  productCategory?: T;
  excerpt?: T;
  heroImage?: T;
  coverImage?: T;
  three?:
    | T
    | {
        enabled?: T;
        model?: T;
      };
  modelName?: T;
  description?: T;
  features?:
    | T
    | {
        featureBlock?: T | FeatureBlockTypeSelect<T>;
      };
  gallery?: T;
  dimensions?:
    | T
    | {
        h?: T;
        w?: T;
        d?: T;
        unit?: T;
      };
  weight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  cellDesc?: T;
  cellLength?: T;
  cellWidth?: T;
  cellCount?: T;
  glassType?: T;
  bifaciality?: T;
  glassDesc?: T;
  frameDesc?: T;
  junctionDesc?: T;
  connDesc?: T;
  connLength?: T;
  temp?:
    | T
    | {
        min?: T;
        max?: T;
      };
  snow?: T;
  wind?: T;
  hail?: T;
  tolerance?:
    | T
    | {
        min?: T;
        max?: T;
      };
  power?:
    | T
    | {
        min?: T;
        max?: T;
        step?: T;
        points?: T | SolarPanelPowerPointsSelect<T>;
      };
  tempCo?:
    | T
    | {
        pmax?: T;
        isc?: T;
        voc?: T;
        noct?: T;
      };
  ratings?:
    | T
    | {
        fuse?: T;
        voltage?: T;
        fire?: T;
      };
  variants?: T | ProductVariantsSelect<T>;
  drawing?: T;
  warranty?: T;
  datasheet?: T;
  certifications?: T;
  instructions?: T;
  oem?: T;
  moq?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  leadTime?:
    | T
    | {
        min?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        max?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        duration?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        id?: T;
      };
  packagingConfig?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolarPanelPowerPoints_select".
 */
export interface SolarPanelPowerPointsSelect<T extends boolean = true> {
  pmax?: T;
  efficiency?: T;
  vmp?: T;
  imp?: T;
  voc?: T;
  isc?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductVariants_select".
 */
export interface ProductVariantsSelect<T extends boolean = true> {
  sku?: T;
  gallery?: T;
  options?:
    | T
    | {
        label?: T;
        value?: T;
        type?: T;
        id?: T;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controllers_select".
 */
export interface PumpControllersSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  visible?: T;
  industry?: T;
  productCategory?: T;
  excerpt?: T;
  heroImage?: T;
  coverImage?: T;
  three?:
    | T
    | {
        enabled?: T;
        model?: T;
      };
  category?: T;
  modelName?: T;
  description?: T;
  features?:
    | T
    | {
        featureBlock?: T | FeatureBlockTypeSelect<T>;
      };
  gallery?: T;
  wideAmplitudeVoltage?:
    | T
    | {
        min?: T;
        max?: T;
      };
  maxCurrent?: T;
  maxPower?: T;
  startingPressureRange?:
    | T
    | {
        min?: T;
        max?: T;
      };
  maxPressure?: T;
  tempRange?:
    | T
    | {
        min?: T;
        max?: T;
      };
  frequencyRange?:
    | T
    | {
        min?: T;
        max?: T;
      };
  protectionGrade?: T;
  threadInterface?: T;
  maxWorkingPressure?: T;
  variants?: T | ProductVariantsSelect<T>;
  drawing?: T;
  warranty?: T;
  datasheet?: T;
  certifications?: T;
  instructions?: T;
  oem?: T;
  moq?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  leadTime?:
    | T
    | {
        min?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        max?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        duration?:
          | T
          | {
              value?: T;
              unit?: T;
            };
        id?: T;
      };
  packagingConfig?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solar-panel-categories_select".
 */
export interface SolarPanelCategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  heroImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pump-controller-categories_select".
 */
export interface PumpControllerCategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  heroImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports_select".
 */
export interface ExportsSelect<T extends boolean = true> {
  name?: T;
  format?: T;
  limit?: T;
  sort?: T;
  locale?: T;
  drafts?: T;
  selectionToUse?: T;
  fields?: T;
  collectionSlug?: T;
  where?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  /**
   * Add multiple columns to organize footer content
   */
  columns?:
    | {
        size?: ('small' | 'medium' | 'large') | null;
        blockType?: ('linkGroup' | 'content' | 'contactInfo') | null;
        linkGroup?: {
          title: string;
          links?:
            | {
                link?: LinkType;
                id?: string | null;
              }[]
            | null;
        };
        content?: {
          title?: string | null;
          richText?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
      }[]
    | null;
  copyright?: string | null;
  links?:
    | {
        link?: LinkType;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info".
 */
export interface CompanyInfo {
  id: string;
  name: string;
  /**
   * The logo of the company
   */
  logo: string | Image;
  /**
   * The logo of the company in dark mode
   */
  logoDark?: (string | null) | Image;
  /**
   * The image used for the open graph image (preferably 1200x630)
   */
  openGraphImage?: (string | null) | Image;
  shortDescription: string;
  longDescription: string;
  vat?: string | null;
  registrationNumber?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info".
 */
export interface ContactInfo {
  id: string;
  email: string;
  phone: string;
  /**
   * The first address will be used as the headquarters address.
   */
  addresses: {
    line1: string;
    line2?: string | null;
    city: string;
    state?: string | null;
    zip?: string | null;
    country: string;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-links".
 */
export interface SocialLink {
  id: string;
  links?:
    | {
        platform: 'facebook' | 'twitter' | 'linkedin' | 'instagram' | 'whatsapp' | 'tiktok' | 'youtube';
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  items?: MenuItems;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        blockType?: T;
        linkGroup?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?: T | LinkTypeSelect<T>;
                    id?: T;
                  };
            };
        content?:
          | T
          | {
              title?: T;
              richText?: T;
            };
        id?: T;
      };
  copyright?: T;
  links?:
    | T
    | {
        link?: T | LinkTypeSelect<T>;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info_select".
 */
export interface CompanyInfoSelect<T extends boolean = true> {
  name?: T;
  logo?: T;
  logoDark?: T;
  openGraphImage?: T;
  shortDescription?: T;
  longDescription?: T;
  vat?: T;
  registrationNumber?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info_select".
 */
export interface ContactInfoSelect<T extends boolean = true> {
  email?: T;
  phone?: T;
  addresses?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        zip?: T;
        country?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-links_select".
 */
export interface SocialLinksSelect<T extends boolean = true> {
  links?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  items?: T | MenuItemsSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MenuItems_select".
 */
export interface MenuItemsSelect<T extends boolean = true> {
  text?: T;
  type?: T;
  link?: T | LinkTypeSelect<T>;
  megaItems?: T | MegaMenuItemsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MegaMenuItems_select".
 */
export interface MegaMenuItemsSelect<T extends boolean = true> {
  type?: T;
  linksSection?:
    | T
    | {
        title?: T;
        items?: T | LinkItemsSelect<T>;
        isExtended?: T;
      };
  banner?:
    | T
    | {
        title?: T;
        description?: T;
        media?: T;
        link?: T | LinkTypeSelect<T>;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkItems_select".
 */
export interface LinkItemsSelect<T extends boolean = true> {
  icon?: T;
  title?: T;
  description?: T;
  link?: T | LinkTypeSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSend-newsletter-confirmation-email".
 */
export interface TaskSendNewsletterConfirmationEmail {
  input: {
    email: string;
    createdAt: string;
    token: string;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'solar-panels';
          value: string | SolarPanel;
        } | null)
      | ({
          relationTo: 'pump-controllers';
          value: string | PumpController;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}